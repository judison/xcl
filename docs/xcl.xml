<?xml version="1.0"?>
<fpdoc-descriptions>
  <package name="xcl">
    <module name="xcl">
      <short/>
      <descr/>
      <element name="Classes">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="Sysutils">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="Contnrs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="CustApp">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TQuark">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TColorData">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeIter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeIter.STP">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeIter.UD1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeIter.UD2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeIter.UD3">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFormClass">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSwitchPageEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSwitchPageEvent.Sender">
        <short/>
      </element>
      <element name="TSwitchPageEvent.NewPage">
        <short/>
      </element>
      <element name="TRowActivatedEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRowActivatedEvent.Sender">
        <short/>
      </element>
      <element name="TRowActivatedEvent.Iter">
        <short/>
      </element>
      <element name="TRowActivatedEvent.Column">
        <short/>
      </element>
      <element name="TResizeMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TResizeMode.rmParent">
        <short>Pass resize request to the parent</short>
      </element>
      <element name="TResizeMode.rmQueue">
        <short>Queue resizes on this control</short>
      </element>
      <element name="TResizeMode.rmImmediate">
        <short>Perform the resizes now</short>
      </element>
      <element name="TShadowType">
        <short>Used to change the appearance of an outline typically provided by a <link id="TFrame">TFrame</link>.</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TShadowType.stNone">
        <short>No outline.</short>
      </element>
      <element name="TShadowType.stIn">
        <short>The outline is bevelled inwards.</short>
      </element>
      <element name="TShadowType.stOut">
        <short>The outline is bevelled outwards like a button.</short>
      </element>
      <element name="TShadowType.stEtchedIn">
        <short/>
      </element>
      <element name="TShadowType.stEtchedOut">
        <short/>
      </element>
      <element name="TJustification">
        <short>Used for justifying the text inside a <link id="TLabel">TLabel</link>.</short>
        <descr/>
        <seealso>
          <link id="TAlignment">TAlignment</link>
        </seealso>
      </element>
      <element name="TJustification.jsLeft">
        <short>The text is placed at the left edge of the label.</short>
      </element>
      <element name="TJustification.jsRight">
        <short>The text is placed at the right edge of the label.</short>
      </element>
      <element name="TJustification.jsCenter">
        <short>The text is placed in the center of the label.</short>
      </element>
      <element name="TJustification.jsFill">
        <short>The text is placed distributed across the label.</short>
      </element>
      <element name="TUpdatePolicy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TUpdatePolicy.upContinuous">
        <short/>
      </element>
      <element name="TUpdatePolicy.upDiscontinuous">
        <short/>
      </element>
      <element name="TUpdatePolicy.upDelayed">
        <short/>
      </element>
      <element name="TScrollBarPolicy">
        <short>Determines when a scroll bar will be visible.</short>
        <descr/>
        <seealso>
          <link id="TScrollBar"/>
        </seealso>
      </element>
      <element name="TScrollBarPolicy.sbpAlways">
        <short>The scrollbar is always visible.</short>
      </element>
      <element name="TScrollBarPolicy.sbpAutomatic">
        <short>The scrollbar will appear and disappear as necessary.</short>
      </element>
      <element name="TScrollBarPolicy.sbpNever">
        <short>The scrollbar will never appear.</short>
      </element>
      <element name="TPosition">
        <short>Describes which edge of a widget a certain feature is positioned at.</short>
        <descr>Like the tabs of a <link id="TNotebook"/>, the handle of a <link id="THandleBox"/> or the valuel of a <link id="TScale"/>.</descr>
        <seealso>
          <link id="TNotebook"/>
          <link id="THandleBox"/>
          <link id="TScale"/>
        </seealso>
      </element>
      <element name="TPosition.psLeft">
        <short>The feature is at the left edge.</short>
      </element>
      <element name="TPosition.psRight">
        <short>The feature is at the right edge.</short>
      </element>
      <element name="TPosition.psTop">
        <short>The feature is at the top edge.</short>
      </element>
      <element name="TPosition.psBottom">
        <short>The feature is at the bottom edge.</short>
      </element>
      <element name="TButtonBoxLayout">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TButtonBoxLayout.bblDefault">
        <short/>
      </element>
      <element name="TButtonBoxLayout.bblSpread">
        <short/>
      </element>
      <element name="TButtonBoxLayout.bblEdge">
        <short/>
      </element>
      <element name="TButtonBoxLayout.bblStart">
        <short/>
      </element>
      <element name="TButtonBoxLayout.bblEnd">
        <short/>
      </element>
      <element name="TArrowType">
        <short>Used to indicate the direction in which a <link id="TArrow"/> should point</short>
        <descr/>
        <seealso>
          <link id="TArrow"/>
        </seealso>
      </element>
      <element name="TArrowType.atUp">
        <short>Represents an upward pointing arrow</short>
      </element>
      <element name="TArrowType.atDown">
        <short>Represents a downward pointing arrow</short>
      </element>
      <element name="TArrowType.atLeft">
        <short>Represents a left pointing arrow</short>
      </element>
      <element name="TArrowType.atRight">
        <short>Represents a right pointing arrow</short>
      </element>
      <element name="TProgressBarOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TProgressBarOrientation.poLeftToRight">
        <short/>
      </element>
      <element name="TProgressBarOrientation.poRightToLeft">
        <short/>
      </element>
      <element name="TProgressBarOrientation.poBottomToTop">
        <short/>
      </element>
      <element name="TProgressBarOrientation.poTopToBottom">
        <short/>
      </element>
      <element name="TWidgetState">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TWidgetState.wsNormal">
        <short/>
      </element>
      <element name="TWidgetState.wsActive">
        <short/>
      </element>
      <element name="TWidgetState.wsPreLight">
        <short/>
      </element>
      <element name="TWidgetState.wsSelected">
        <short/>
      </element>
      <element name="TWidgetState.wsInsensitive">
        <short/>
      </element>
      <element name="TTreeViewColumnSizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumnSizing.tvcsGrowOnly">
        <short/>
      </element>
      <element name="TTreeViewColumnSizing.tvcsAutosize">
        <short/>
      </element>
      <element name="TTreeViewColumnSizing.tvcsFixed">
        <short/>
      </element>
      <element name="TFileChooserAction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserAction.fcaOpen">
        <short/>
      </element>
      <element name="TFileChooserAction.fcaSave">
        <short/>
      </element>
      <element name="TFileChooserAction.fcaSelectFolder">
        <short/>
      </element>
      <element name="TFileChooserAction.fcaCreateFolder">
        <short/>
      </element>
      <element name="TOrientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TOrientation.orHorizontal">
        <short/>
      </element>
      <element name="TOrientation.orVertical">
        <short/>
      </element>
      <element name="TToolBarStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolBarStyle.tbsDefault">
        <short/>
      </element>
      <element name="TToolBarStyle.tbsIcons">
        <short/>
      </element>
      <element name="TToolBarStyle.tbsText">
        <short/>
      </element>
      <element name="TToolBarStyle.tbsBoth">
        <short/>
      </element>
      <element name="TToolBarStyle.tbsBothHoriz">
        <short/>
      </element>
      <element name="TIconSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIconSize.iszInvalid">
        <short/>
      </element>
      <element name="TIconSize.iszMenu">
        <short/>
      </element>
      <element name="TIconSize.iszSmallToolBar">
        <short/>
      </element>
      <element name="TIconSize.iszLargeToolBar">
        <short/>
      </element>
      <element name="TIconSize.iszButton">
        <short/>
      </element>
      <element name="TIconSize.iszDnD">
        <short/>
      </element>
      <element name="TIconSize.iszDialog">
        <short/>
      </element>
      <element name="TRelief">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRelief.rlfNormal">
        <short/>
      </element>
      <element name="TRelief.rlfHalf">
        <short/>
      </element>
      <element name="TRelief.rlfNone">
        <short/>
      </element>
      <element name="TSelectionMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSelectionMode.smNone">
        <short/>
      </element>
      <element name="TSelectionMode.smSingle">
        <short/>
      </element>
      <element name="TSelectionMode.smBrowse">
        <short/>
      </element>
      <element name="TSortType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSortType.stAscending">
        <short/>
      </element>
      <element name="TSortType.stDescending">
        <short/>
      </element>
      <element name="TAttachOption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAttachOption.aoExpand">
        <short/>
      </element>
      <element name="TAttachOption.aoShrink">
        <short/>
      </element>
      <element name="TAttachOption.aoFill">
        <short/>
      </element>
      <element name="TCanvasFunction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCanvasFunction.fnCopy">
        <short/>
      </element>
      <element name="TCanvasFunction.fnInvert">
        <short/>
      </element>
      <element name="TCanvasFunction.fnXor">
        <short/>
      </element>
      <element name="TCanvasFunction.fnClear">
        <short/>
      </element>
      <element name="TCanvasFunction.fnAnd">
        <short/>
      </element>
      <element name="TCanvasFunction.fnAndReverse">
        <short/>
      </element>
      <element name="TCanvasFunction.fnAndInvert">
        <short/>
      </element>
      <element name="TCanvasFunction.fnNoop">
        <short/>
      </element>
      <element name="TCanvasFunction.fnOr">
        <short/>
      </element>
      <element name="TCanvasFunction.fnEquiv">
        <short/>
      </element>
      <element name="TCanvasFunction.fnOrReverse">
        <short/>
      </element>
      <element name="TCanvasFunction.fnCopyInvert">
        <short/>
      </element>
      <element name="TCanvasFunction.fnOrInvert">
        <short/>
      </element>
      <element name="TCanvasFunction.fnNand">
        <short/>
      </element>
      <element name="TCanvasFunction.fnNor">
        <short/>
      </element>
      <element name="TCanvasFunction.fnSet">
        <short/>
      </element>
      <element name="TCanvasFill">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCanvasFill.flSolid">
        <short/>
      </element>
      <element name="TCanvasFill.flTiled">
        <short/>
      </element>
      <element name="TCanvasFill.flStippled">
        <short/>
      </element>
      <element name="TCanvasFill.fsOpaqueStippled">
        <short/>
      </element>
      <element name="TWrapMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TWrapMode.wmNone">
        <short/>
      </element>
      <element name="TWrapMode.wmChar">
        <short/>
      </element>
      <element name="TWrapMode.wmWord">
        <short/>
      </element>
      <element name="TWrapMode.wmWordChar">
        <short/>
      </element>
      <element name="TEllipsizeMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEllipsizeMode.emNone">
        <short/>
      </element>
      <element name="TEllipsizeMode.emStart">
        <short/>
      </element>
      <element name="TEllipsizeMode.emMiddle">
        <short/>
      </element>
      <element name="TEllipsizeMode.emEnd">
        <short/>
      </element>
      <element name="TMessageType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMessageType.mtInfo">
        <short/>
      </element>
      <element name="TMessageType.mtWarning">
        <short/>
      </element>
      <element name="TMessageType.mtQuestion">
        <short/>
      </element>
      <element name="TMessageType.mtError">
        <short/>
      </element>
      <element name="TMessageButton">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMessageButton.mbOK">
        <short/>
      </element>
      <element name="TMessageButton.mbCancel">
        <short/>
      </element>
      <element name="TMessageButton.mbClose">
        <short/>
      </element>
      <element name="TMessageButton.mbYes">
        <short/>
      </element>
      <element name="TMessageButton.mbNo">
        <short/>
      </element>
      <element name="TMessageResponse">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMessageResponse.mrNone">
        <short/>
      </element>
      <element name="TMessageResponse.mrOK">
        <short/>
      </element>
      <element name="TMessageResponse.mrCancel">
        <short/>
      </element>
      <element name="TMessageResponse.mrClose">
        <short/>
      </element>
      <element name="TMessageResponse.mrYes">
        <short/>
      </element>
      <element name="TMessageResponse.mrNo">
        <short/>
      </element>
      <element name="TAttachOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMessageButtons">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSig">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSig.Signal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSig.P1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSig.P2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSig.I1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSig.I2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSigEvent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSigEvent.Signal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSigEvent.Event">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGtkSigEvent.Stop">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TXCLMsg">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TXCLMsg.Name">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TXCLMsg.UID">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TXCLMsg.Int">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TXCLMsg.Ptr">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TXCLMsg.Str">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TColormap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TColormap.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TColormap.Create.AHandle">
        <short/>
      </element>
      <element name="TColormap.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TColormap.NewColorData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TColormap.NewColorData.Result">
        <short/>
      </element>
      <element name="TColormap.NewColorData.ADesc">
        <short/>
      </element>
      <element name="TColormap.FreeColorData">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TColormap.FreeColorData.AColorData">
        <short/>
      </element>
      <element name="TGList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGList.Get.Result">
        <short/>
      </element>
      <element name="TGList.Get.AIndex">
        <short/>
      </element>
      <element name="TGList.Put.AIndex">
        <short/>
      </element>
      <element name="TGList.Put.AValue">
        <short/>
      </element>
      <element name="TGList.GetCount.Result">
        <short/>
      </element>
      <element name="TGList.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGList.Create.AHandle">
        <short/>
      </element>
      <element name="TGList.Create.AListOwner">
        <short/>
      </element>
      <element name="TGList.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGList.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGList.Add.AValue">
        <short/>
      </element>
      <element name="TGList.Remove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGList.Remove.AIdx">
        <short/>
      </element>
      <element name="TGList.ListOwner">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGList.Handle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGList.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGList.Items.Index">
        <short/>
      </element>
      <element name="TGList.Count">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGStrings">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGStrings.Get.Result">
        <short/>
      </element>
      <element name="TGStrings.Get.Index">
        <short/>
      </element>
      <element name="TGStrings.GetCapacity.Result">
        <short/>
      </element>
      <element name="TGStrings.GetCount.Result">
        <short/>
      </element>
      <element name="TGStrings.Put.Index">
        <short/>
      </element>
      <element name="TGStrings.Put.S">
        <short/>
      </element>
      <element name="TGStrings.SetUpdateState.Updating">
        <short/>
      </element>
      <element name="TGStrings.Handle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TGStrings.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGStrings.Create.AHandle">
        <short/>
      </element>
      <element name="TGStrings.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGStrings.Changed">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGStrings.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGStrings.Delete">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGStrings.Delete.Index">
        <short/>
      </element>
      <element name="TGStrings.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TGStrings.Insert.Index">
        <short/>
      </element>
      <element name="TGStrings.Insert.S">
        <short/>
      </element>
      <element name="TGStrings.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TActionList">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TActionList.GetAction.Result">
        <short/>
      </element>
      <element name="TActionList.GetAction.Index">
        <short/>
      </element>
      <element name="TActionList.GetActionCount.Result">
        <short/>
      </element>
      <element name="TActionList.SetAction.Index">
        <short/>
      </element>
      <element name="TActionList.SetAction.Value">
        <short/>
      </element>
      <element name="TActionList.AddAction.AAction">
        <short/>
      </element>
      <element name="TActionList.RemoveAction.AAction">
        <short/>
      </element>
      <element name="TActionList.GetChildren.Proc">
        <short/>
      </element>
      <element name="TActionList.GetChildren.Root">
        <short/>
      </element>
      <element name="TActionList.Notification.AComponent">
        <short/>
      </element>
      <element name="TActionList.Notification.Operation">
        <short/>
      </element>
      <element name="TActionList.SetChildOrder.AComponent">
        <short/>
      </element>
      <element name="TActionList.SetChildOrder.AOrder">
        <short/>
      </element>
      <element name="TActionList.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TActionList.Create.AOwner">
        <short/>
      </element>
      <element name="TActionList.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TActionList.IndexOfName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TActionList.IndexOfName.Result">
        <short/>
      </element>
      <element name="TActionList.IndexOfName.AActionName">
        <short/>
      </element>
      <element name="TActionList.ActionByName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TActionList.ActionByName.Result">
        <short/>
      </element>
      <element name="TActionList.ActionByName.AActionName">
        <short/>
      </element>
      <element name="TActionList.Actions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TActionList.Actions.Index">
        <short/>
      </element>
      <element name="TActionList.ActionCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TActionList.AccelGroup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="IActionClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IActionClient.DoActionChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IActionClient.DoActionChanged.Sender">
        <short/>
      </element>
      <element name="TCustomAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.GetIndex.Result">
        <short/>
      </element>
      <element name="TCustomAction.SetCategory.Value">
        <short/>
      </element>
      <element name="TCustomAction.SetIndex.Value">
        <short/>
      </element>
      <element name="TCustomAction.SetActionList.AActionList">
        <short/>
      </element>
      <element name="TCustomAction.SetAccelerator.AValue">
        <short/>
      </element>
      <element name="TCustomAction.SetCaption.AValue">
        <short/>
      </element>
      <element name="TCustomAction.SetTooltip.AValue">
        <short/>
      </element>
      <element name="TCustomAction.SetIconName.AValue">
        <short/>
      </element>
      <element name="TCustomAction.SetSensitive.AValue">
        <short/>
      </element>
      <element name="TCustomAction.SetVisible.AValue">
        <short/>
      </element>
      <element name="TCustomAction.IsCaptionStored.Result">
        <short/>
      </element>
      <element name="TCustomAction.IsIconNameStored.Result">
        <short/>
      </element>
      <element name="TCustomAction.ReadState.Reader">
        <short/>
      </element>
      <element name="TCustomAction.SetParentComponent.AParent">
        <short/>
      </element>
      <element name="TCustomAction.AssignTo.Dest">
        <short/>
      </element>
      <element name="TCustomAction.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.Create.AOwner">
        <short/>
      </element>
      <element name="TCustomAction.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.AddClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.AddClient.AClient">
        <short/>
      </element>
      <element name="TCustomAction.RemoveClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.RemoveClient.AClient">
        <short/>
      </element>
      <element name="TCustomAction.Execute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.Update">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.GetAccelLabel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.GetAccelLabel.Result">
        <short/>
      </element>
      <element name="TCustomAction.GetParentComponent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.GetParentComponent.Result">
        <short/>
      </element>
      <element name="TCustomAction.HasParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomAction.HasParent.Result">
        <short/>
      </element>
      <element name="TCustomAction.ActionList">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.Index">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.Accelerator">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.Tooltip">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.Sensitive">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.OnExecute">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.OnUpdate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomAction.Category">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAction.Accelerator">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction.Tooltip">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction.Sensitive">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction.OnExecute">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAction.OnUpdate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="IDesigner">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.IsDesignMsg">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.IsDesignMsg.Result">
        <short/>
      </element>
      <element name="IDesigner.IsDesignMsg.Sender">
        <short/>
      </element>
      <element name="IDesigner.IsDesignMsg.Message">
        <short/>
      </element>
      <element name="IDesigner.Modified">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.Notification.AComponent">
        <short/>
      </element>
      <element name="IDesigner.Notification.Operation">
        <short/>
      </element>
      <element name="IDesigner.PaintGrid">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.ValidateRename">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.ValidateRename.AComponent">
        <short/>
      </element>
      <element name="IDesigner.ValidateRename.CurName">
        <short/>
      </element>
      <element name="IDesigner.ValidateRename.NewName">
        <short/>
      </element>
      <element name="IDesigner.GetShiftState">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.GetShiftState.Result">
        <short/>
      </element>
      <element name="IDesigner.SelectOnlyThisComponent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.SelectOnlyThisComponent.AComponent">
        <short/>
      </element>
      <element name="IDesigner.UniqueName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IDesigner.UniqueName.Result">
        <short/>
      </element>
      <element name="IDesigner.UniqueName.BaseName">
        <short/>
      </element>
      <element name="TClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TClipboard.Handle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TClipboard.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TClipboard.Create.AClipboardAtom">
        <short/>
      </element>
      <element name="TClipboard.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.SetColormap.AValue">
        <short/>
      </element>
      <element name="TCanvas.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.Create.ADrawable">
        <short/>
      </element>
      <element name="TCanvas.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.CreateGC">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.SetFunction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.SetFunction.AValue">
        <short/>
      </element>
      <element name="TCanvas.SetFill">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.SetFill.AValue">
        <short/>
      </element>
      <element name="TCanvas.SetForeground">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.SetForeground.AValue">
        <short/>
      </element>
      <element name="TCanvas.SetBackground">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.SetBackground.AValue">
        <short/>
      </element>
      <element name="TCanvas.Point">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.Point.AX">
        <short/>
      </element>
      <element name="TCanvas.Point.AY">
        <short/>
      </element>
      <element name="TCanvas.Line">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.Line.AX1">
        <short/>
      </element>
      <element name="TCanvas.Line.AY1">
        <short/>
      </element>
      <element name="TCanvas.Line.AX2">
        <short/>
      </element>
      <element name="TCanvas.Line.AY2">
        <short/>
      </element>
      <element name="TCanvas.Rectangle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.Rectangle.AFilled">
        <short/>
      </element>
      <element name="TCanvas.Rectangle.AX">
        <short/>
      </element>
      <element name="TCanvas.Rectangle.AY">
        <short/>
      </element>
      <element name="TCanvas.Rectangle.AWidth">
        <short/>
      </element>
      <element name="TCanvas.Rectangle.AHeight">
        <short/>
      </element>
      <element name="TCanvas.Arc">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCanvas.Arc.AFilled">
        <short/>
      </element>
      <element name="TCanvas.Arc.AX">
        <short/>
      </element>
      <element name="TCanvas.Arc.AY">
        <short/>
      </element>
      <element name="TCanvas.Arc.AWidth">
        <short/>
      </element>
      <element name="TCanvas.Arc.AHeight">
        <short/>
      </element>
      <element name="TCanvas.Arc.AAngle1">
        <short/>
      </element>
      <element name="TCanvas.Arc.AAngle2">
        <short/>
      </element>
      <element name="TCanvas.Colormap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCanvas.Func">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCanvas.Fill">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCanvas.Foreground">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCanvas.Background">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="IPixBufClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IPixBufClient.PixBufChanged">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="IPixBufClient.PixBufChanged.APixBuf">
        <short/>
      </element>
      <element name="TPixBuf">
        <short>The TPixbuf structure contains information that describes an image in memory.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TPixBuf.SetFileName.AValue">
        <short/>
      </element>
      <element name="TPixBuf.SetResource.AValue">
        <short/>
      </element>
      <element name="TPixBuf.SetIconName.AValue">
        <short/>
      </element>
      <element name="TPixBuf.SetIconSize.AValue">
        <short/>
      </element>
      <element name="TPixBuf.SetIconName.AName">
        <short/>
      </element>
      <element name="TPixBuf.SetIconName.ASize">
        <short/>
      </element>
      <element name="TPixBuf.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TPixBuf.Create.AOwner">
        <short/>
      </element>
      <element name="TPixBuf.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TPixBuf.AddClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TPixBuf.AddClient.AValue">
        <short/>
      </element>
      <element name="TPixBuf.RemoveClient">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TPixBuf.RemoveClient.AValue">
        <short/>
      </element>
      <element name="TPixBuf.GetGdkPixbuf">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TPixBuf.GetGdkPixbuf.Result">
        <short/>
      </element>
      <element name="TPixBuf.FileName">
        <short/>
        <descr>Loads an image from a file. The file format is detected automatically.</descr>
        <seealso/>
      </element>
      <element name="TPixBuf.Resource">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TPixBuf.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TPixBuf.IconSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAccelGroup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelGroup.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelGroup.Create.AOwner">
        <short/>
      </element>
      <element name="TAccelGroup.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelGroup.GetHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelGroup.GetHandle.Result">
        <short/>
      </element>
      <element name="TAccelerator">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelerator.SetAccelName.AValue">
        <short/>
      </element>
      <element name="TAccelerator.SetAccelGroup.AValue">
        <short/>
      </element>
      <element name="TAccelerator.Update.AAccelGroup">
        <short/>
      </element>
      <element name="TAccelerator.Update.AAccelName">
        <short/>
      </element>
      <element name="TAccelerator.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelerator.Create.AOwner">
        <short/>
      </element>
      <element name="TAccelerator.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelerator.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelerator.Notification.AComponent">
        <short/>
      </element>
      <element name="TAccelerator.Notification.Operation">
        <short/>
      </element>
      <element name="TAccelerator.DoActivate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAccelerator.AccelGroup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAccelerator.AccelName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAccelerator.OnActivate">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMenu">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenu.GetChildren.Proc">
        <short/>
      </element>
      <element name="TMenu.GetChildren.Root">
        <short/>
      </element>
      <element name="TMenu.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenu.Create.AOwner">
        <short/>
      </element>
      <element name="TMenu.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenu.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenu.Notification.AComponent">
        <short/>
      </element>
      <element name="TMenu.Notification.Operation">
        <short/>
      </element>
      <element name="TMenu.AddMenu">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenu.AddMenu.AMenu">
        <short/>
      </element>
      <element name="TMenu.RemoveMenu">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenu.RemoveMenu.AMenu">
        <short/>
      </element>
      <element name="TMenu.Popup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenu.Popup.AButton">
        <short/>
      </element>
      <element name="TMenu.Popup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.SetTitle.AValue">
        <short/>
      </element>
      <element name="TApplication.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.Create.AOwner">
        <short/>
      </element>
      <element name="TApplication.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.Initialize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ShowException">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ShowException.E">
        <short/>
      </element>
      <element name="TApplication.CreateForm">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.CreateForm.AClass">
        <short/>
      </element>
      <element name="TApplication.CreateForm.Ref">
        <short/>
      </element>
      <element name="TApplication.ShowMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ShowMessage.Result">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AType">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AButtons">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.ATitle">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AMsg">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.ASec">
        <short/>
      </element>
      <element name="TApplication.ShowMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ShowMessage.Result">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AType">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AButtons">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.ATitle">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AMsg">
        <short/>
      </element>
      <element name="TApplication.ShowMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ShowMessage.Result">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AType">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AButtons">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AMsg">
        <short/>
      </element>
      <element name="TApplication.ShowMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ShowMessage.Result">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AType">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AMsg">
        <short/>
      </element>
      <element name="TApplication.ShowMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ShowMessage.Result">
        <short/>
      </element>
      <element name="TApplication.ShowMessage.AMsg">
        <short/>
      </element>
      <element name="TApplication.EnableToolTips">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.DisableToolTips">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ProcessMessages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ProcessMessages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.ProcessMessages.ABlock">
        <short/>
      </element>
      <element name="TApplication.AddAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.AddAction.AAction">
        <short/>
      </element>
      <element name="TApplication.RemoveAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TApplication.RemoveAction.AAction">
        <short/>
      </element>
      <element name="TApplication.Colormap">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TApplication.CurrentLocale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TApplication.MainForm">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl">
        <short>Base class for all Controls</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.GetFontDesc.Result">
        <short/>
      </element>
      <element name="TControl.SetFontDesc.AValue">
        <short/>
      </element>
      <element name="TControl.IsFontDescStored.Result">
        <short/>
      </element>
      <element name="TControl.GetToolTip.Result">
        <short/>
      </element>
      <element name="TControl.SetToolTip.AValue">
        <short/>
      </element>
      <element name="TControl.SetPopupMenu.AValue">
        <short/>
      </element>
      <element name="TControl.GetVisible.Result">
        <short/>
      </element>
      <element name="TControl.SetVisible.AValue">
        <short/>
      </element>
      <element name="TControl.GetSensitive.Result">
        <short/>
      </element>
      <element name="TControl.SetSensitive.AValue">
        <short/>
      </element>
      <element name="TControl.GetState.Result">
        <short/>
      </element>
      <element name="TControl.GetSizeRequest.Result">
        <short/>
      </element>
      <element name="TControl.GetSizeRequest.AIdx">
        <short/>
      </element>
      <element name="TControl.SetSizeRequest.AIdx">
        <short/>
      </element>
      <element name="TControl.SetSizeRequest.AValue">
        <short/>
      </element>
      <element name="TControl.SetFixedX.AValue">
        <short/>
      </element>
      <element name="TControl.SetFixedY.AValue">
        <short/>
      </element>
      <element name="TControl.IsFixedXYStored.Result">
        <short/>
      </element>
      <element name="TControl.GetBoxExpand.Result">
        <short/>
      </element>
      <element name="TControl.GetBoxFill.Result">
        <short/>
      </element>
      <element name="TControl.SetBoxExpand.AValue">
        <short/>
      </element>
      <element name="TControl.SetBoxFill.AValue">
        <short/>
      </element>
      <element name="TControl.GetBoxPadding.Result">
        <short/>
      </element>
      <element name="TControl.SetBoxPadding.AValue">
        <short/>
      </element>
      <element name="TControl.GetBoxPosition.Result">
        <short/>
      </element>
      <element name="TControl.SetBoxPosition.AValue">
        <short/>
      </element>
      <element name="TControl.GetPanedResize.Result">
        <short/>
      </element>
      <element name="TControl.GetPanedShrink.Result">
        <short/>
      </element>
      <element name="TControl.SetPanedResize.AValue">
        <short/>
      </element>
      <element name="TControl.SetPanedShrink.AValue">
        <short/>
      </element>
      <element name="TControl.IsPanedResizeStored.Result">
        <short/>
      </element>
      <element name="TControl.IsPanedShrinkStored.Result">
        <short/>
      </element>
      <element name="TControl.GetTableBottomAttach.Result">
        <short/>
      </element>
      <element name="TControl.SetTableBottomAttach.AValue">
        <short/>
      </element>
      <element name="TControl.GetTableLeftAttach.Result">
        <short/>
      </element>
      <element name="TControl.SetTableLeftAttach.AValue">
        <short/>
      </element>
      <element name="TControl.GetTableRightAttach.Result">
        <short/>
      </element>
      <element name="TControl.SetTableRightAttach.AValue">
        <short/>
      </element>
      <element name="TControl.GetTableTopAttach.Result">
        <short/>
      </element>
      <element name="TControl.SetTableTopAttach.AValue">
        <short/>
      </element>
      <element name="TControl.GetTableXPadding.Result">
        <short/>
      </element>
      <element name="TControl.SetTableXPadding.AValue">
        <short/>
      </element>
      <element name="TControl.GetTableYPadding.Result">
        <short/>
      </element>
      <element name="TControl.SetTableYPadding.AValue">
        <short/>
      </element>
      <element name="TControl.IsTableAttachStored.Result">
        <short/>
      </element>
      <element name="TControl.GetTableXOptions.Result">
        <short/>
      </element>
      <element name="TControl.SetTableXOptions.AValue">
        <short/>
      </element>
      <element name="TControl.GetTableYOptions.Result">
        <short/>
      </element>
      <element name="TControl.SetTableYOptions.AValue">
        <short/>
      </element>
      <element name="TControl.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TControl.AddControl.AControl">
        <short/>
      </element>
      <element name="TControl.RemoveControl.AControl">
        <short/>
      </element>
      <element name="TControl.GetControlByIndex.Result">
        <short/>
      </element>
      <element name="TControl.GetControlByIndex.AIndex">
        <short/>
      </element>
      <element name="TControl.GetControlCount.Result">
        <short/>
      </element>
      <element name="TControl.SetName.Value">
        <short/>
      </element>
      <element name="TControl.ReadState.Reader">
        <short/>
      </element>
      <element name="TControl.GetChildren.Proc">
        <short/>
      </element>
      <element name="TControl.GetChildren.Root">
        <short/>
      </element>
      <element name="TControl.ConnectGtkSignal.AName">
        <short/>
      </element>
      <element name="TControl.DisconnectGtkSignal.AName">
        <short/>
      </element>
      <element name="TControl.IsBoxExpandStored.Result">
        <short/>
      </element>
      <element name="TControl.DoPopupMenu.Msg">
        <short/>
      </element>
      <element name="TControl.DoShow.Msg">
        <short/>
      </element>
      <element name="TControl.DoHide.Msg">
        <short/>
      </element>
      <element name="TControl.DoButtonPress.Msg">
        <short/>
      </element>
      <element name="TControl.DoFocusIn.Msg">
        <short/>
      </element>
      <element name="TControl.DoFocusOut.Msg">
        <short/>
      </element>
      <element name="TControl.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.Create.AOwner">
        <short/>
      </element>
      <element name="TControl.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.Notification.AComponent">
        <short/>
      </element>
      <element name="TControl.Notification.Operation">
        <short/>
      </element>
      <element name="TControl.GetHandle">
        <short>Returns the GtkWidget handle associated.</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.GetHandle.Result">
        <short/>
      </element>
      <element name="TControl.HasParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.HasParent.Result">
        <short/>
      </element>
      <element name="TControl.GetForm">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.GetForm.Result">
        <short/>
      </element>
      <element name="TControl.GrabFocus">
        <short>Grab Focus</short>
        <descr>Causes control to have the keyboard focus for the <link id="TForm"/> it's inside. It must be a focusable control, such as a <link id="TEntry"/>; something like <link id="TFrame"/> won't work.</descr>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.IsFocus">
        <short>Determines if the widget is the focus control within its toplevel.</short>
        <descr>Determines if the widget is the focus control within its toplevel. (This does not mean that the cfHasFocus flag is necessarily set; cfHasFocus will only be set if the toplevel widget additionally has the global input focus.)</descr>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.IsFocus.Result">
        <short/>
      </element>
      <element name="TControl.Show">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.Hide">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.ShowPopupMenu">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.ShowPopupMenu.AButton">
        <short/>
      </element>
      <element name="TControl.SendMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.SendMessage.AMsg">
        <short/>
      </element>
      <element name="TControl.SendMessage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.SendMessage.AName">
        <short/>
      </element>
      <element name="TControl.DesignShowProp">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TControl.DesignShowProp.Result">
        <short/>
      </element>
      <element name="TControl.DesignShowProp.AName">
        <short/>
      </element>
      <element name="TControl.Controls">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.Controls.index">
        <short/>
      </element>
      <element name="TControl.ControlCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.Parent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.State">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.FontDesc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.PopupMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.ToolTip">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.Sensitive">
        <short>Whether the widget responds to input.</short>
        <descr>Sets the sensitivity of a control. A control is sensitive if the user can interact with it. Insensitive controls are "grayed out" and the user can't interact with them. Insensitive controls are known as "inactive", "disabled", or "ghosted" in some other toolkits.</descr>
        <seealso>
          <link id="TControl.Visible"/>
        </seealso>
      </element>
      <element name="TControl.Visible">
        <short>Whether the control is visible.</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.WidthRequest">
        <short/>
        <descr>Override for width request of the control, or -1 if natural request should be used.</descr>
        <seealso/>
      </element>
      <element name="TControl.HeightRequest">
        <short/>
        <descr>Override for height request of the widget, or -1 if natural request should be used.</descr>
        <seealso/>
      </element>
      <element name="TControl.FixedX">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.FixedY">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.BoxExpand">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.BoxFill">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.BoxPadding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.BoxPosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.PanedResize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.PanedShrink">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableBottomAttach">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableLeftAttach">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableRightAttach">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableTopAttach">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableXPadding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableYPadding">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableXOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.TableYOptions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.OnShow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.OnHide">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.OnFocusIn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TControl.OnFocusOut">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMiscControl">
        <short>Base class for controls with alignments and padding</short>
        <descr>
          <p>The TMiscControl is an abstract control which is not useful itself, but is used to derive subclasses which have alignment and padding attributes.</p>
          <p>The horizontal and vertical padding properties allows extra space to be added around the control.</p>
          <p>The horizontal and vertical alignment properties enable the control to be positioned within its allocated area. Note that if the widget is added to a container in such a way that it expands automatically to fill its allocated area, the alignment settings will not alter the controls position.</p>
        </descr>
        <errors/>
        <seealso>
          <link id="TLabel"/>
          <link id="TImage"/>
          <link id="TArrow"/>
        </seealso>
      </element>
      <element name="TMiscControl.GetPadding">
        <short>Gets both vertical and horizontal padding</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMiscControl.GetPadding.AXPad">
        <short>variable to store padding in the X direction</short>
      </element>
      <element name="TMiscControl.GetPadding.AYPad">
        <short>variable to store padding in the Y direction</short>
      </element>
      <element name="TMiscControl.SetPadding">
        <short>Sets both vertical and horizontal padding</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMiscControl.SetPadding.AXPad">
        <short>the amount of space to add on the left and right of the widget, in pixels</short>
      </element>
      <element name="TMiscControl.SetPadding.AYPad">
        <short>the amount of space to add on the top and bottom of the widget, in pixels</short>
      </element>
      <element name="TMiscControl.GetAlignment">
        <short>Gets both vertical and horizontal alignment</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMiscControl.GetAlignment.AXAlign">
        <short>variable to store the horizontal alignment</short>
      </element>
      <element name="TMiscControl.GetAlignment.AYAlign">
        <short>variable to store the vertical alignment</short>
      </element>
      <element name="TMiscControl.SetAlignment">
        <short>Sets both vertical and horizontal alignment</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMiscControl.SetAlignment.AXAlign">
        <short>the horizontal alignment, from 0 (left) to 1 (right)</short>
      </element>
      <element name="TMiscControl.SetAlignment.AYAlign">
        <short>the vertical alignment, from 0 (top) to 1 (bottom)</short>
      </element>
      <element name="TMiscControl.XPad">
        <short>Horizontal Padding</short>
        <descr>The amount of space to add on the left and right of the widget, in pixels.</descr>
        <seealso/>
      </element>
      <element name="TMiscControl.YPad">
        <short>Vertical Padding</short>
        <descr>The amount of space to add on the top and bottom of the widget, in pixels.</descr>
        <seealso/>
      </element>
      <element name="TMiscControl.XAlign">
        <short>Horizontal Alignment</short>
        <descr>The horizontal alignment, from 0 (left) to 1 (right). Reversed for RTL layouts.</descr>
        <seealso/>
      </element>
      <element name="TMiscControl.YAlign">
        <short>Vertical Alignment</short>
        <descr>The vertical alignment, from 0 (top) to 1 (bottom).</descr>
        <seealso/>
      </element>
      <element name="TArrow">
        <short>Displays an arrow</short>
        <descr>
          <p>TArrow should be used to draw simple arrows that need to point in one of the four cardinal directions (up, down, left, or right).</p>
          <p>The style of the arrow can be one of shadow in, shadow out, etched in, or etched out. Note that these directions and style types may be ammended in versions of Gtk to come.</p>
          <p>TArrow will fill any space allocated to it, but since it is inherited from <link id="TMiscControl"/>, it can be padded and/or aligned, to fill exactly the space the programmer desires.</p>
        </descr>
        <errors/>
        <seealso/>
      </element>
      <element name="TArrow.SetArrowType.AValue">
        <short/>
      </element>
      <element name="TArrow.SetShadowType.AValue">
        <short/>
      </element>
      <element name="TArrow.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TArrow.Create.AOwner">
        <short/>
      </element>
      <element name="TArrow.ArrowType">
        <short>The direction the arrow should point</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TArrow.ShadowType">
        <short>Appearance of the shadow surrounding the arrow</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TLabel">
        <short>A control that displays a small to medium amount of text</short>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TLabel.GetJustify.Result">
        <short/>
      </element>
      <element name="TLabel.GetLineWrap.Result">
        <short/>
      </element>
      <element name="TLabel.GetSelectable.Result">
        <short/>
      </element>
      <element name="TLabel.GetUseMarkup.Result">
        <short/>
      </element>
      <element name="TLabel.GetUseUnderline.Result">
        <short/>
      </element>
      <element name="TLabel.SetCaption.AValue">
        <short/>
      </element>
      <element name="TLabel.SetFocusControl.AValue">
        <short/>
      </element>
      <element name="TLabel.SetJustify.AValue">
        <short/>
      </element>
      <element name="TLabel.SetLineWrap.AValue">
        <short/>
      </element>
      <element name="TLabel.SetSelectable.AValue">
        <short/>
      </element>
      <element name="TLabel.SetUseMarkup.AValue">
        <short/>
      </element>
      <element name="TLabel.SetUseUnderline.AValue">
        <short/>
      </element>
      <element name="TLabel.GetEllipsize.Result">
        <short/>
      </element>
      <element name="TLabel.SetEllipsize.AValue">
        <short/>
      </element>
      <element name="TLabel.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TLabel.Create.AOwner">
        <short/>
      </element>
      <element name="TLabel.Caption">
        <short>The text of the label</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TLabel.FocusControl">
        <short>The control to be activated when the label's mnemonic key is pressed</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TLabel.Justify">
        <short>The alignment of the lines in the text of the label relative to each other</short>
        <descr>This does NOT affect the alignment of the label within its allocation. See <link id="TMiscControl.XAlign"/> for that.</descr>
        <seealso>
          <link id="TMiscControl.XAlign"/>
        </seealso>
      </element>
      <element name="TLabel.LineWrap">
        <short>If set, wrap lines if the text becomes too wide</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TLabel.Selectable">
        <short>Whether the label text can be selected with the mouse</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TLabel.UseMarkup">
        <short>The text of the label includes XML markup</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TLabel.UseUnderline">
        <short>If set, an underline in the text indicates the next character should be used for the mnemonic accelerator key</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TLabel.Ellipsize">
        <short>The preferred place to ellipsize the string</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TImage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TImage.SetIconName.AValue">
        <short/>
      </element>
      <element name="TImage.SetIconSize.AValue">
        <short/>
      </element>
      <element name="TImage.SetPixbuf.AValue">
        <short/>
      </element>
      <element name="TImage.SetResource.AValue">
        <short/>
      </element>
      <element name="TImage.PixbufChanged.APixbuf">
        <short/>
      </element>
      <element name="TImage.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TImage.Notification.AComponent">
        <short/>
      </element>
      <element name="TImage.Notification.Operation">
        <short/>
      </element>
      <element name="TImage.Resource">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImage.Pixbuf">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImage.IconSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImage.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TContainerControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TContainerControl.GetBorderWidth.Result">
        <short/>
      </element>
      <element name="TContainerControl.SetBorderWidth.Value">
        <short/>
      </element>
      <element name="TContainerControl.GetResizeMode.Result">
        <short/>
      </element>
      <element name="TContainerControl.SetResizeMode.Value">
        <short/>
      </element>
      <element name="TContainerControl.IsResizeModeStored.Result">
        <short/>
      </element>
      <element name="TContainerControl.InternalAddControl.AControl">
        <short/>
      </element>
      <element name="TContainerControl.AddControl.AControl">
        <short/>
      </element>
      <element name="TContainerControl.RemoveControl.AControl">
        <short/>
      </element>
      <element name="TContainerControl.InternalRemoveControl.AControl">
        <short/>
      </element>
      <element name="TContainerControl.GetControlByIndex.Result">
        <short/>
      </element>
      <element name="TContainerControl.GetControlByIndex.AIndex">
        <short/>
      </element>
      <element name="TContainerControl.GetControlCount.Result">
        <short/>
      </element>
      <element name="TContainerControl.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TContainerControl.CheckResize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TContainerControl.ReorderControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TContainerControl.ReorderControl.AChildControl">
        <short/>
      </element>
      <element name="TContainerControl.ReorderControl.APos">
        <short/>
      </element>
      <element name="TContainerControl.BorderWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TContainerControl.ResizeMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TBinControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TBinControl.AddControl.AControl">
        <short/>
      </element>
      <element name="TBinControl.RemoveControl.AControl">
        <short/>
      </element>
      <element name="TBinControl.GetControlByIndex.Result">
        <short/>
      </element>
      <element name="TBinControl.GetControlByIndex.AIndex">
        <short/>
      </element>
      <element name="TBinControl.GetControlCount.Result">
        <short/>
      </element>
      <element name="TBinControl.Child">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAlignment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAlignment.SetXAlign.AValue">
        <short/>
      </element>
      <element name="TAlignment.SetYAlign.AValue">
        <short/>
      </element>
      <element name="TAlignment.SetXScale.AValue">
        <short/>
      </element>
      <element name="TAlignment.SetYScale.AValue">
        <short/>
      </element>
      <element name="TAlignment.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAlignment.Create.AOwner">
        <short/>
      </element>
      <element name="TAlignment.SetAll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAlignment.SetAll.AXAlign">
        <short/>
      </element>
      <element name="TAlignment.SetAll.AYAlign">
        <short/>
      </element>
      <element name="TAlignment.SetAll.AXScale">
        <short/>
      </element>
      <element name="TAlignment.SetAll.AYScale">
        <short/>
      </element>
      <element name="TAlignment.XAlign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAlignment.YAlign">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAlignment.XScale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAlignment.YScale">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.GetTitle.Result">
        <short/>
      </element>
      <element name="TForm.GetHeight.Result">
        <short/>
      </element>
      <element name="TForm.GetWidth.Result">
        <short/>
      </element>
      <element name="TForm.GetResizable.Result">
        <short/>
      </element>
      <element name="TForm.GetDecorated.Result">
        <short/>
      </element>
      <element name="TForm.SetTitle.Value">
        <short/>
      </element>
      <element name="TForm.SetIcon.Value">
        <short/>
      </element>
      <element name="TForm.SetHeight.Value">
        <short/>
      </element>
      <element name="TForm.SetWidth.Value">
        <short/>
      </element>
      <element name="TForm.SetResizable.Value">
        <short/>
      </element>
      <element name="TForm.SetDecorated.Value">
        <short/>
      </element>
      <element name="TForm.PixbufChanged.APixbuf">
        <short/>
      </element>
      <element name="TForm.DoCloseQuery.CanClose">
        <short/>
      </element>
      <element name="TForm.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Create.AOwner">
        <short/>
      </element>
      <element name="TForm.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Notification.AComponent">
        <short/>
      </element>
      <element name="TForm.Notification.Operation">
        <short/>
      </element>
      <element name="TForm.GetSize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.GetSize.AWidth">
        <short/>
      </element>
      <element name="TForm.GetSize.AHeight">
        <short/>
      </element>
      <element name="TForm.Resize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Resize.AWidth">
        <short/>
      </element>
      <element name="TForm.Resize.AHeight">
        <short/>
      </element>
      <element name="TForm.Iconify">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Deiconify">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Stick">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.UnStick">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Maximize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.UnMaximize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Show">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Show">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.Show.ATransientFor">
        <short/>
      </element>
      <element name="TForm.Hide">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.ShowModal">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.ShowModal">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.ShowModal.ATransientFor">
        <short/>
      </element>
      <element name="TForm.Close">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.DoDeleteEvent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.DoDeleteEvent.Msg">
        <short/>
      </element>
      <element name="TForm.AddAccelGroup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.AddAccelGroup.AAccelGroup">
        <short/>
      </element>
      <element name="TForm.RemoveAccelGroup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.RemoveAccelGroup.AAccelGroup">
        <short/>
      </element>
      <element name="TForm.ReadBinFrm">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.ReadBinFrm.AStream">
        <short/>
      </element>
      <element name="TForm.ReadTxtFrm">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.ReadTxtFrm.AStream">
        <short/>
      </element>
      <element name="TForm.WriteBinFrm">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.WriteBinFrm.AStream">
        <short/>
      </element>
      <element name="TForm.WriteTxtFrm">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.WriteTxtFrm.AStream">
        <short/>
      </element>
      <element name="TForm.GetChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TForm.GetChildren.Proc">
        <short/>
      </element>
      <element name="TForm.GetChildren.Root">
        <short/>
      </element>
      <element name="TForm.Designer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.AccelGroup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.Title">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.Icon">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.Height">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.ResizeMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.Resizable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TForm.Decorated">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFrame">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TFrame.GetCaption.Result">
        <short/>
      </element>
      <element name="TFrame.GetShadowType.Result">
        <short/>
      </element>
      <element name="TFrame.SetCaption.Value">
        <short/>
      </element>
      <element name="TFrame.SetShadowType.Value">
        <short/>
      </element>
      <element name="TFrame.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFrame.ShadowType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomButton.GetFocusOnClick.Result">
        <short/>
      </element>
      <element name="TCustomButton.GetRelief.Result">
        <short/>
      </element>
      <element name="TCustomButton.GetUseUnderline.Result">
        <short/>
      </element>
      <element name="TCustomButton.SetCaption.AValue">
        <short/>
      </element>
      <element name="TCustomButton.SetIconName.AValue">
        <short/>
      </element>
      <element name="TCustomButton.SetFocusOnClick.AValue">
        <short/>
      </element>
      <element name="TCustomButton.SetRelief.AValue">
        <short/>
      </element>
      <element name="TCustomButton.SetUseUnderline.AValue">
        <short/>
      </element>
      <element name="TCustomButton.GetIconSize.Result">
        <short/>
      </element>
      <element name="TCustomButton.SetIconSize.AValue">
        <short/>
      </element>
      <element name="TCustomButton.AddControl.AControl">
        <short/>
      </element>
      <element name="TCustomButton.RemoveControl.AControl">
        <short/>
      </element>
      <element name="TCustomButton.SetAction.AValue">
        <short/>
      </element>
      <element name="TCustomButton.DoActionChanged.Sender">
        <short/>
      </element>
      <element name="TCustomButton.DoClicked.Msg">
        <short/>
      </element>
      <element name="TCustomButton.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomButton.Notification.AComponent">
        <short/>
      </element>
      <element name="TCustomButton.Notification.Operation">
        <short/>
      </element>
      <element name="TCustomButton.IconSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomButton.FocusOnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomButton.Relief">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomButton.OnClicked">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TColorButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TColorButton.SetColor.AValue">
        <short/>
      </element>
      <element name="TColorButton.GetColor.Result">
        <short/>
      </element>
      <element name="TColorButton.Color">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFontButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TFontButton.GetFontName.Result">
        <short/>
      </element>
      <element name="TFontButton.SetFontName.AValue">
        <short/>
      </element>
      <element name="TFontButton.IsFontNameStored.Result">
        <short/>
      </element>
      <element name="TFontButton.GetShowStyle.Result">
        <short/>
      </element>
      <element name="TFontButton.SetShowStyle.AValue">
        <short/>
      </element>
      <element name="TFontButton.GetShowSize.Result">
        <short/>
      </element>
      <element name="TFontButton.SetShowSize.AValue">
        <short/>
      </element>
      <element name="TFontButton.GetUseFont.Result">
        <short/>
      </element>
      <element name="TFontButton.SetUseFont.AValue">
        <short/>
      </element>
      <element name="TFontButton.GetUseSize.Result">
        <short/>
      </element>
      <element name="TFontButton.SetUseSize.AValue">
        <short/>
      </element>
      <element name="TFontButton.GetTitle.Result">
        <short/>
      </element>
      <element name="TFontButton.SetTitle.AValue">
        <short/>
      </element>
      <element name="TFontButton.IsTitleStored.Result">
        <short/>
      </element>
      <element name="TFontButton.FontName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFontButton.ShowStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFontButton.ShowSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFontButton.UseFont">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFontButton.UseSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFontButton.Title">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TButton.Action">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TButton.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TButton.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TButton.UseUnderline">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToggleButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomToggleButton.GetActive.Result">
        <short/>
      </element>
      <element name="TCustomToggleButton.GetDrawIndicator.Result">
        <short/>
      </element>
      <element name="TCustomToggleButton.GetInconsistent.Result">
        <short/>
      </element>
      <element name="TCustomToggleButton.SetActive.Value">
        <short/>
      </element>
      <element name="TCustomToggleButton.SetDrawIndicator.Value">
        <short/>
      </element>
      <element name="TCustomToggleButton.SetInconsistent.Value">
        <short/>
      </element>
      <element name="TCustomToggleButton.DoToggled.Msg">
        <short/>
      </element>
      <element name="TCustomToggleButton.Active">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToggleButton.Inconsistent">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToggleButton.OnToggled">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToggleButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TToggleButton.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToggleButton.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToggleButton.UseUnderline">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToggleButton.DrawIndicator">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCheckButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCheckButton.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCheckButton.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCheckButton.UseUnderline">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRadioButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TRadioButton.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TAdjustment">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAdjustment.GetLower.Result">
        <short/>
      </element>
      <element name="TAdjustment.GetUpper.Result">
        <short/>
      </element>
      <element name="TAdjustment.GetValue.Result">
        <short/>
      </element>
      <element name="TAdjustment.GetStepIncrement.Result">
        <short/>
      </element>
      <element name="TAdjustment.GetPageIncrement.Result">
        <short/>
      </element>
      <element name="TAdjustment.GetPageSize.Result">
        <short/>
      </element>
      <element name="TAdjustment.SetLower.AValue">
        <short/>
      </element>
      <element name="TAdjustment.SetUpper.AValue">
        <short/>
      </element>
      <element name="TAdjustment.SetValue.AValue">
        <short/>
      </element>
      <element name="TAdjustment.SetStepIncrement.AValue">
        <short/>
      </element>
      <element name="TAdjustment.SetPageIncrement.AValue">
        <short/>
      </element>
      <element name="TAdjustment.SetPageSize.AValue">
        <short/>
      </element>
      <element name="TAdjustment.GetHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAdjustment.GetHandle.Result">
        <short/>
      </element>
      <element name="TAdjustment.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAdjustment.Create.AOwner">
        <short/>
      </element>
      <element name="TAdjustment.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAdjustment.Create.AOwner">
        <short/>
      </element>
      <element name="TAdjustment.Create.AHandle">
        <short/>
      </element>
      <element name="TAdjustment.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAdjustment.Lower">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAdjustment.Upper">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAdjustment.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAdjustment.StepIncrement">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAdjustment.PageIncrement">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAdjustment.PageSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScrolledWindow">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TScrolledWindow.GetShadowType.Result">
        <short/>
      </element>
      <element name="TScrolledWindow.SetShadowType.AValue">
        <short/>
      </element>
      <element name="TScrolledWindow.GetPolicy.Result">
        <short/>
      </element>
      <element name="TScrolledWindow.GetPolicy.AIdx">
        <short/>
      </element>
      <element name="TScrolledWindow.SetPolicy.AIdx">
        <short/>
      </element>
      <element name="TScrolledWindow.SetPolicy.AValue">
        <short/>
      </element>
      <element name="TScrolledWindow.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TScrolledWindow.VAdjustment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScrolledWindow.HAdjustment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScrolledWindow.ShadowType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScrolledWindow.HPolicy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScrolledWindow.VPolicy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebookPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TNotebookPage.GetCaption.Result">
        <short/>
      </element>
      <element name="TNotebookPage.SetCaption.AValue">
        <short/>
      </element>
      <element name="TNotebookPage.GetIconName.Result">
        <short/>
      </element>
      <element name="TNotebookPage.SetIconName.AValue">
        <short/>
      </element>
      <element name="TNotebookPage.GetUseUnderline.Result">
        <short/>
      </element>
      <element name="TNotebookPage.SetUseUnderline.AValue">
        <short/>
      </element>
      <element name="TNotebookPage.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TNotebookPage.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebookPage.IconName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebookPage.UseUnderline">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THandleBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="THandleBox.GetShadowType.Result">
        <short/>
      </element>
      <element name="THandleBox.SetShadowType.AValue">
        <short/>
      </element>
      <element name="THandleBox.GetHandlePosition.Result">
        <short/>
      </element>
      <element name="THandleBox.SetHandlePosition.AValue">
        <short/>
      </element>
      <element name="THandleBox.HandlePosition">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THandleBox.ShadowType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TExpander">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TExpander.GetCaption.Result">
        <short/>
      </element>
      <element name="TExpander.SetCaption.AValue">
        <short/>
      </element>
      <element name="TExpander.GetExpanded.Result">
        <short/>
      </element>
      <element name="TExpander.SetExpanded.AValue">
        <short/>
      </element>
      <element name="TExpander.GetSpacing.Result">
        <short/>
      </element>
      <element name="TExpander.SetSpacing.AValue">
        <short/>
      </element>
      <element name="TExpander.GetUseUnderline.Result">
        <short/>
      </element>
      <element name="TExpander.SetUseUnderline.AValue">
        <short/>
      </element>
      <element name="TExpander.GetUseMarkup.Result">
        <short/>
      </element>
      <element name="TExpander.SetUseMarkup.AValue">
        <short/>
      </element>
      <element name="TExpander.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TExpander.Expanded">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TExpander.Spacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TExpander.UseUnderline">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TExpander.UseMarkup">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TViewport">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TViewport.GetShadowType.Result">
        <short/>
      </element>
      <element name="TViewport.SetShadowType.AValue">
        <short/>
      </element>
      <element name="TViewport.IsResizeModeStored.Result">
        <short/>
      </element>
      <element name="TViewport.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TViewport.ShadowType">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.GetOrientation.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.GetToolBarStyle.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.GetSmallIcons.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.GetHomogeneous.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.SetHomogeneous.AValue">
        <short/>
      </element>
      <element name="TCustomToolItem.GetExpand.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.SetExpand.AValue">
        <short/>
      </element>
      <element name="TCustomToolItem.GetVisibleHorizontal.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.SetVisibleHorizontal.AValue">
        <short/>
      </element>
      <element name="TCustomToolItem.GetVisibleVertical.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.SetVisibleVertical.AValue">
        <short/>
      </element>
      <element name="TCustomToolItem.GetIsImportant.Result">
        <short/>
      </element>
      <element name="TCustomToolItem.SetIsImportant.AValue">
        <short/>
      </element>
      <element name="TCustomToolItem.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.ToolBarStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.SmallIcons">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.Homogeneous">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.Expand">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.VisibleHorizontal">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.VisibleVertical">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomToolItem.IsImportant">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TToolItem.FBtnClicked.Sender">
        <short/>
      </element>
      <element name="TToolItem.AddControl.AControl">
        <short/>
      </element>
      <element name="TToolItem.SetAction.AValue">
        <short/>
      </element>
      <element name="TToolItem.DoActionChanged.Sender">
        <short/>
      </element>
      <element name="TToolItem.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TToolItem.Notification.AComponent">
        <short/>
      </element>
      <element name="TToolItem.Notification.Operation">
        <short/>
      </element>
      <element name="TToolItem.SubLabel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolItem.Image">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolItem.Button">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolItem.Action">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSeparatorToolItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSeparatorToolItem.GetDraw.Result">
        <short/>
      </element>
      <element name="TSeparatorToolItem.SetDraw.AValue">
        <short/>
      </element>
      <element name="TSeparatorToolItem.Draw">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TPaned">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TPaned.GetPosition.Result">
        <short/>
      </element>
      <element name="TPaned.SetPosition.AValue">
        <short/>
      </element>
      <element name="TPaned.AddControl.AControl">
        <short/>
      </element>
      <element name="TPaned.RemoveControl.AControl">
        <short/>
      </element>
      <element name="TPaned.GetControlByIndex.Result">
        <short/>
      </element>
      <element name="TPaned.GetControlByIndex.AIndex">
        <short/>
      </element>
      <element name="TPaned.GetControlCount.Result">
        <short/>
      </element>
      <element name="TPaned.ChildA">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TPaned.ChildB">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TPaned.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THPaned">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TVPaned">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TFixed">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TFixed.InternalAddControl.AControl">
        <short/>
      </element>
      <element name="TFixed.MoveChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TFixed.MoveChild.AChild">
        <short/>
      </element>
      <element name="TFixed.MoveChild.AX">
        <short/>
      </element>
      <element name="TFixed.MoveChild.AY">
        <short/>
      </element>
      <element name="TMenuBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenuBar.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TMenuBar.IsBoxExpandStored.Result">
        <short/>
      </element>
      <element name="TNotebook">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TNotebook.GetCurrentPage.Result">
        <short/>
      </element>
      <element name="TNotebook.SetCurrentPage.AValue">
        <short/>
      </element>
      <element name="TNotebook.GetShowTabs.Result">
        <short/>
      </element>
      <element name="TNotebook.SetShowTabs.AValue">
        <short/>
      </element>
      <element name="TNotebook.GetScrollable.Result">
        <short/>
      </element>
      <element name="TNotebook.SetScrollable.AValue">
        <short/>
      </element>
      <element name="TNotebook.AddControl.AControl">
        <short/>
      </element>
      <element name="TNotebook.InternalRemoveControl.AControl">
        <short/>
      </element>
      <element name="TNotebook.DoSwitchPage.Msg">
        <short/>
      </element>
      <element name="TNotebook.GetNthPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TNotebook.GetNthPage.Result">
        <short/>
      </element>
      <element name="TNotebook.GetNthPage.AIdx">
        <short/>
      </element>
      <element name="TNotebook.GetNPages">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TNotebook.GetNPages.Result">
        <short/>
      </element>
      <element name="TNotebook.PageNum">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TNotebook.PageNum.Result">
        <short/>
      </element>
      <element name="TNotebook.PageNum.APage">
        <short/>
      </element>
      <element name="TNotebook.NextPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TNotebook.PrevPage">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TNotebook.CurrentPage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebook.Pages">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebook.Pages.Index">
        <short/>
      </element>
      <element name="TNotebook.PageCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebook.ShowTabs">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebook.Scrollable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TNotebook.OnSwitchPage">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TToolBar.GetOrientation.Result">
        <short/>
      </element>
      <element name="TToolBar.SetOrientation.AValue">
        <short/>
      </element>
      <element name="TToolBar.GetShowArrow.Result">
        <short/>
      </element>
      <element name="TToolBar.SetShowArrow.AValue">
        <short/>
      </element>
      <element name="TToolBar.SetSmallIcons.AValue">
        <short/>
      </element>
      <element name="TToolBar.GetToolBarStyle.Result">
        <short/>
      </element>
      <element name="TToolBar.SetToolBarStyle.AValue">
        <short/>
      </element>
      <element name="TToolBar.AddControl.AControl">
        <short/>
      </element>
      <element name="TToolBar.InternalAddControl.AControl">
        <short/>
      </element>
      <element name="TToolBar.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TToolBar.IsBoxExpandStored.Result">
        <short/>
      </element>
      <element name="TToolBar.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TToolBar.Create.AOwner">
        <short/>
      </element>
      <element name="TToolBar.GetCurrentToolBarStyle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TToolBar.GetCurrentToolBarStyle.Result">
        <short/>
      </element>
      <element name="TToolBar.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolBar.ShowArrow">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolBar.SmallIcons">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TToolBar.ToolBarStyle">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTable">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTable.GetHomogeneous.Result">
        <short/>
      </element>
      <element name="TTable.SetHomogeneous.AValue">
        <short/>
      </element>
      <element name="TTable.GetNCols.Result">
        <short/>
      </element>
      <element name="TTable.SetNCols.AValue">
        <short/>
      </element>
      <element name="TTable.GetNRows.Result">
        <short/>
      </element>
      <element name="TTable.SetNRows.AValue">
        <short/>
      </element>
      <element name="TTable.Resize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTable.Resize.ARows">
        <short/>
      </element>
      <element name="TTable.Resize.AColumns">
        <short/>
      </element>
      <element name="TTable.Homogeneous">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTable.NCols">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTable.NRows">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TBox.GetHomogeneous.Result">
        <short/>
      </element>
      <element name="TBox.GetSpacing.Result">
        <short/>
      </element>
      <element name="TBox.SetHomogeneous.Value">
        <short/>
      </element>
      <element name="TBox.SetSpacing.Value">
        <short/>
      </element>
      <element name="TBox.ReorderControl">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TBox.ReorderControl.AChildControl">
        <short/>
      </element>
      <element name="TBox.ReorderControl.APos">
        <short/>
      </element>
      <element name="TBox.Homogeneous">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TBox.Spacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TVBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TButtonBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TButtonBox.GetLayout.Result">
        <short/>
      </element>
      <element name="TButtonBox.SetLayout.AValue">
        <short/>
      </element>
      <element name="TButtonBox.Layout">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THButtonBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TVButtonBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.GetEditable.Result">
        <short/>
      </element>
      <element name="TCustomEntry.GetPosition.Result">
        <short/>
      </element>
      <element name="TCustomEntry.SetEditable.AValue">
        <short/>
      </element>
      <element name="TCustomEntry.SetPosition.AValue">
        <short/>
      </element>
      <element name="TCustomEntry.CutClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.CopyClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.PasteClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.DeleteSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.InsertText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.InsertText.AText">
        <short/>
      </element>
      <element name="TCustomEntry.InsertText.APos">
        <short/>
      </element>
      <element name="TCustomEntry.DeleteText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.DeleteText.AStartPos">
        <short/>
      </element>
      <element name="TCustomEntry.DeleteText.AEndPos">
        <short/>
      </element>
      <element name="TCustomEntry.GetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.GetSelection.AStartPos">
        <short/>
      </element>
      <element name="TCustomEntry.GetSelection.AEndPos">
        <short/>
      </element>
      <element name="TCustomEntry.SetSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomEntry.SetSelection.AStartPos">
        <short/>
      </element>
      <element name="TCustomEntry.SetSelection.AEndPos">
        <short/>
      </element>
      <element name="TCustomEntry.Editable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomEntry.Position">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomEntry.GetHasFrame.Result">
        <short/>
      </element>
      <element name="TCustomEntry.SetHasFrame.AValue">
        <short/>
      </element>
      <element name="TCustomEntry.GetVisibility.Result">
        <short/>
      </element>
      <element name="TCustomEntry.SetVisibility.AValue">
        <short/>
      </element>
      <element name="TCustomEntry.GetMaxLength.Result">
        <short/>
      </element>
      <element name="TCustomEntry.SetMaxLength.AValue">
        <short/>
      </element>
      <element name="TCustomEntry.GetWidthChars.Result">
        <short/>
      </element>
      <element name="TCustomEntry.SetWidthChars.AValue">
        <short/>
      </element>
      <element name="TCustomEntry.DoChanged.Msg">
        <short/>
      </element>
      <element name="TCustomEntry.GetText.Result">
        <short/>
      </element>
      <element name="TCustomEntry.SetText.AValue">
        <short/>
      </element>
      <element name="TCustomEntry.HasFrame">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomEntry.MaxLength">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomEntry.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomEntry.Visibility">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomEntry.WidthChars">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomEntry.OnChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TEntry">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSpinButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSpinButton.GetValue.Result">
        <short/>
      </element>
      <element name="TSpinButton.SetValue.AValue">
        <short/>
      </element>
      <element name="TSpinButton.GetDigits.Result">
        <short/>
      </element>
      <element name="TSpinButton.SetDigits.AValue">
        <short/>
      </element>
      <element name="TSpinButton.GetSnapToTicks.Result">
        <short/>
      </element>
      <element name="TSpinButton.SetSnapToTicks.AValue">
        <short/>
      </element>
      <element name="TSpinButton.GetMin.Result">
        <short/>
      </element>
      <element name="TSpinButton.SetMin.AValue">
        <short/>
      </element>
      <element name="TSpinButton.GetMax.Result">
        <short/>
      </element>
      <element name="TSpinButton.SetMax.AValue">
        <short/>
      </element>
      <element name="TSpinButton.GetStep.Result">
        <short/>
      </element>
      <element name="TSpinButton.SetStep.AValue">
        <short/>
      </element>
      <element name="TSpinButton.GetPage.Result">
        <short/>
      </element>
      <element name="TSpinButton.SetPage.AValue">
        <short/>
      </element>
      <element name="TSpinButton.GetRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSpinButton.GetRange.AMin">
        <short/>
      </element>
      <element name="TSpinButton.GetRange.AMax">
        <short/>
      </element>
      <element name="TSpinButton.SetRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSpinButton.SetRange.AMin">
        <short/>
      </element>
      <element name="TSpinButton.SetRange.AMax">
        <short/>
      </element>
      <element name="TSpinButton.GetIncrements">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSpinButton.GetIncrements.AStep">
        <short/>
      </element>
      <element name="TSpinButton.GetIncrements.APage">
        <short/>
      </element>
      <element name="TSpinButton.SetIncrements">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSpinButton.SetIncrements.AStep">
        <short/>
      </element>
      <element name="TSpinButton.SetIncrements.APage">
        <short/>
      </element>
      <element name="TSpinButton.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSpinButton.Digits">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSpinButton.SnapToTicks">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSpinButton.Min">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSpinButton.Max">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSpinButton.Step">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSpinButton.Page">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextView">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextView.SetWrapMode.AValue">
        <short/>
      </element>
      <element name="TTextView.GetWrapMode.Result">
        <short/>
      </element>
      <element name="TTextView.SetEditable.AValue">
        <short/>
      </element>
      <element name="TTextView.GetEditable.Result">
        <short/>
      </element>
      <element name="TTextView.SetJustification.AValue">
        <short/>
      </element>
      <element name="TTextView.GetJustification.Result">
        <short/>
      </element>
      <element name="TTextView.SetTextBuffer.AValue">
        <short/>
      </element>
      <element name="TTextView.FontDesc">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextView.TextBuffer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextView.Editable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBox">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TComboBox.CellLayoutPackStart.ARenderer">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutPackStart.AExpand">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutPackEnd.ARenderer">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutPackEnd.AExpand">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutReorder.ARenderer">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutReorder.APosition">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutAddAttribute.ARenderer">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutAddAttribute.AAttribute">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutAddAttribute.AColumn">
        <short/>
      </element>
      <element name="TComboBox.CellLayoutClearAttributes.ARenderer">
        <short/>
      </element>
      <element name="TComboBox.GetWrapWidth.Result">
        <short/>
      </element>
      <element name="TComboBox.SetWrapWidth.AValue">
        <short/>
      </element>
      <element name="TComboBox.GetRowSpanColumn.Result">
        <short/>
      </element>
      <element name="TComboBox.SetRowSpanColumn.AValue">
        <short/>
      </element>
      <element name="TComboBox.GetColumnSpanColumn.Result">
        <short/>
      </element>
      <element name="TComboBox.SetColumnSpanColumn.AValue">
        <short/>
      </element>
      <element name="TComboBox.GetActive.Result">
        <short/>
      </element>
      <element name="TComboBox.SetActive.AValue">
        <short/>
      </element>
      <element name="TComboBox.GetHasFrame.Result">
        <short/>
      </element>
      <element name="TComboBox.SetHasFrame.AValue">
        <short/>
      </element>
      <element name="TComboBox.DoChanged.Msg">
        <short/>
      </element>
      <element name="TComboBox.SetModel.AValue">
        <short/>
      </element>
      <element name="TComboBox.SetTextColumn.AValue">
        <short/>
      </element>
      <element name="TComboBox.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TComboBox.Create.AOwner">
        <short/>
      </element>
      <element name="TComboBox.SetActiveIter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TComboBox.SetActiveIter.AIter">
        <short/>
      </element>
      <element name="TComboBox.GetActiveIter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TComboBox.GetActiveIter.Result">
        <short/>
      </element>
      <element name="TComboBox.GetActiveIter.AIter">
        <short/>
      </element>
      <element name="TComboBox.Popup">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TComboBox.Popdown">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TComboBox.Active">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBox.Model">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBox.WrapWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBox.RowSpanColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBox.ColumnSpanColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBox.TextColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBox.OnChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBoxEntry">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TComboBoxEntry.SetTextColumn.AValue">
        <short/>
      </element>
      <element name="TComboBoxEntry.GetActiveText.Result">
        <short/>
      </element>
      <element name="TComboBoxEntry.SetModel.AValue">
        <short/>
      </element>
      <element name="TComboBoxEntry.ActiveText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TComboBoxEntry.HasFrame">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem.GetRightJustified.Result">
        <short/>
      </element>
      <element name="TCustomMenuItem.SetRightJustified.AValue">
        <short/>
      </element>
      <element name="TCustomMenuItem.AddControl.AControl">
        <short/>
      </element>
      <element name="TCustomMenuItem.RemoveControl.AControl">
        <short/>
      </element>
      <element name="TCustomMenuItem.GetControlByIndex.Result">
        <short/>
      </element>
      <element name="TCustomMenuItem.GetControlByIndex.AIndex">
        <short/>
      </element>
      <element name="TCustomMenuItem.GetControlCount.Result">
        <short/>
      </element>
      <element name="TCustomMenuItem.ReadState.Reader">
        <short/>
      </element>
      <element name="TCustomMenuItem.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TCustomMenuItem.SetParentMenu.AValue">
        <short/>
      </element>
      <element name="TCustomMenuItem.DoActivate.Msg">
        <short/>
      </element>
      <element name="TCustomMenuItem.HasParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem.HasParent.Result">
        <short/>
      </element>
      <element name="TCustomMenuItem.Activate">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem.Select">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem.Deselect">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem.ParentMenu">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem.RightJustified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCustomMenuItem.OnClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenuItem.SetCaption.AValue">
        <short/>
      </element>
      <element name="TMenuItem.GetCaption.Result">
        <short/>
      </element>
      <element name="TMenuItem.IsCaptionStored.Result">
        <short/>
      </element>
      <element name="TMenuItem.SetAction.AValue">
        <short/>
      </element>
      <element name="TMenuItem.DoActionChanged.Sender">
        <short/>
      </element>
      <element name="TMenuItem.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TMenuItem.SetParentMenu.AValue">
        <short/>
      </element>
      <element name="TMenuItem.DoActivate.Msg">
        <short/>
      </element>
      <element name="TMenuItem.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TMenuItem.Notification.AComponent">
        <short/>
      </element>
      <element name="TMenuItem.Notification.Operation">
        <short/>
      </element>
      <element name="TMenuItem.Action">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TMenuItem.Caption">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TSeparatorMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTearoffMenuItem">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TProgressBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TProgressBar.GetText.Result">
        <short/>
      </element>
      <element name="TProgressBar.GetFraction.Result">
        <short/>
      </element>
      <element name="TProgressBar.GetPulseStep.Result">
        <short/>
      </element>
      <element name="TProgressBar.GetOrientation.Result">
        <short/>
      </element>
      <element name="TProgressBar.SetText.AValue">
        <short/>
      </element>
      <element name="TProgressBar.SetFraction.AValue">
        <short/>
      </element>
      <element name="TProgressBar.SetPulseStep.AValue">
        <short/>
      </element>
      <element name="TProgressBar.SetOrientation.AValue">
        <short/>
      </element>
      <element name="TProgressBar.GetEllipsize.Result">
        <short/>
      </element>
      <element name="TProgressBar.SetEllipsize.AValue">
        <short/>
      </element>
      <element name="TProgressBar.Pulse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TProgressBar.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TProgressBar.Fraction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TProgressBar.PulseStep">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TProgressBar.Orientation">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TProgressBar.Ellipsize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TStatusBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TStatusBar.GetHasResizeGrip.Result">
        <short/>
      </element>
      <element name="TStatusBar.SetHasResizeGrip.Value">
        <short/>
      </element>
      <element name="TStatusBar.GetContextId">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TStatusBar.GetContextId.Result">
        <short/>
      </element>
      <element name="TStatusBar.GetContextId.AContextDescription">
        <short/>
      </element>
      <element name="TStatusBar.Push">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TStatusBar.Push.Result">
        <short/>
      </element>
      <element name="TStatusBar.Push.AContextId">
        <short/>
      </element>
      <element name="TStatusBar.Push.AText">
        <short/>
      </element>
      <element name="TStatusBar.Pop">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TStatusBar.Pop.AContextId">
        <short/>
      </element>
      <element name="TStatusBar.Remove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TStatusBar.Remove.AContextId">
        <short/>
      </element>
      <element name="TStatusBar.Remove.AMessageId">
        <short/>
      </element>
      <element name="TStatusBar.HasResizeGrip">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCalendar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TCalendar.GetDate.Result">
        <short/>
      </element>
      <element name="TCalendar.SetDate.AValue">
        <short/>
      </element>
      <element name="TCalendar.DoDaySelected.Msg">
        <short/>
      </element>
      <element name="TCalendar.DoDaySelectedDoubleClick.Msg">
        <short/>
      </element>
      <element name="TCalendar.DoMonthChanged.Msg">
        <short/>
      </element>
      <element name="TCalendar.Date">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCalendar.OnChange">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCalendar.OnDaySelected">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCalendar.OnDaySelectedDoubleClick">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TCalendar.OnMonthChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TColorSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TColorSelection.CurrentColor">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.SetFileAction.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetFileAction.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.SetLocalOnly.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetLocalOnly.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.SetSelectMultiple.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetSelectMultiple.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.SetShowHidden.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetShowHidden.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.SetFileName.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetFileName.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.SetCurrentFolder.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetCurrentFolder.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.SetURI.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetURI.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.SetCurrentFolderURI.AValue">
        <short/>
      </element>
      <element name="TFileChooserWidget.GetCurrentFolderURI.Result">
        <short/>
      </element>
      <element name="TFileChooserWidget.FileName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.CurrentFolder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.URI">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.CurrentFolderURI">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.FileAction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.LocalOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.SelectMultiple">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserWidget.ShowHidden">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TRange.GetInverted.Result">
        <short/>
      </element>
      <element name="TRange.GetUpdatePolicy.Result">
        <short/>
      </element>
      <element name="TRange.SetAdjustment.AValue">
        <short/>
      </element>
      <element name="TRange.SetInverted.AValue">
        <short/>
      </element>
      <element name="TRange.SetUpdatePolicy.AValue">
        <short/>
      </element>
      <element name="TRange.IsMyAdjStored.Result">
        <short/>
      </element>
      <element name="TRange.GetLower.Result">
        <short/>
      </element>
      <element name="TRange.GetUpper.Result">
        <short/>
      </element>
      <element name="TRange.GetValue.Result">
        <short/>
      </element>
      <element name="TRange.GetStepIncrement.Result">
        <short/>
      </element>
      <element name="TRange.GetPageIncrement.Result">
        <short/>
      </element>
      <element name="TRange.GetPageSize.Result">
        <short/>
      </element>
      <element name="TRange.SetLower.AValue">
        <short/>
      </element>
      <element name="TRange.SetUpper.AValue">
        <short/>
      </element>
      <element name="TRange.SetValue.AValue">
        <short/>
      </element>
      <element name="TRange.SetStepIncrement.AValue">
        <short/>
      </element>
      <element name="TRange.SetPageIncrement.AValue">
        <short/>
      </element>
      <element name="TRange.SetPageSize.AValue">
        <short/>
      </element>
      <element name="TRange.Adjustment">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.Inverted">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.UpdatePolicy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.Lower">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.Upper">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.Value">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.StepIncrement">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.PageIncrement">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TRange.PageSize">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScrollBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="THScrollBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TVScrollBar">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TScale">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TScale.GetDigits.Result">
        <short/>
      </element>
      <element name="TScale.GetDrawValue.Result">
        <short/>
      </element>
      <element name="TScale.GetValuePos.Result">
        <short/>
      </element>
      <element name="TScale.SetDigits.AValue">
        <short/>
      </element>
      <element name="TScale.SetDrawValue.AValue">
        <short/>
      </element>
      <element name="TScale.SetValuePos.AValue">
        <short/>
      </element>
      <element name="TScale.Digits">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScale.DrawValue">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TScale.ValuePos">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="THScale">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TVScale">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSeparator">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TSeparator.SetParent.ANewParent">
        <short/>
      </element>
      <element name="TSeparator.IsBoxExpandStored.Result">
        <short/>
      </element>
      <element name="THSeparator">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TVSeparator">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTimer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTimer.SetActive.AValue">
        <short/>
      </element>
      <element name="TTimer.SetInterval.AValue">
        <short/>
      </element>
      <element name="TTimer.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTimer.Create.AOwner">
        <short/>
      </element>
      <element name="TTimer.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTimer.Active">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTimer.Interval">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTimer.OnTimer">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy1">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy2">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy3">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy4">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy5">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy6">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy7">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy8">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy9">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy10">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy11">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy12">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy13">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextIter.dummy14">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextBuffer">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.GetLineCount.Result">
        <short/>
      </element>
      <element name="TTextBuffer.GetCharCount.Result">
        <short/>
      </element>
      <element name="TTextBuffer.GetSelText.Result">
        <short/>
      </element>
      <element name="TTextBuffer.GetModified.Result">
        <short/>
      </element>
      <element name="TTextBuffer.SetModified.AValue">
        <short/>
      </element>
      <element name="TTextBuffer.GetText.Result">
        <short/>
      </element>
      <element name="TTextBuffer.SetText.AValue">
        <short/>
      </element>
      <element name="TTextBuffer.DoChanged.Msg">
        <short/>
      </element>
      <element name="TTextBuffer.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.Create.AOwner">
        <short/>
      </element>
      <element name="TTextBuffer.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.InsertAtCursor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.InsertAtCursor.AStr">
        <short/>
      </element>
      <element name="TTextBuffer.BeginUserAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.EndUserAction">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.DeleteSelection">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.DeleteSelection.AInteractive">
        <short/>
      </element>
      <element name="TTextBuffer.DeleteSelection.ADefaultEditable">
        <short/>
      </element>
      <element name="TTextBuffer.PasteClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.PasteClipboard.AClipboard">
        <short/>
      </element>
      <element name="TTextBuffer.PasteClipboard.ADefaultEditable">
        <short/>
      </element>
      <element name="TTextBuffer.CopyClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.CopyClipboard.AClipboard">
        <short/>
      </element>
      <element name="TTextBuffer.CutClipboard">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.CutClipboard.AClipboard">
        <short/>
      </element>
      <element name="TTextBuffer.CutClipboard.ADefaultEditable">
        <short/>
      </element>
      <element name="TTextBuffer.GetIter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.GetIter.Result">
        <short/>
      </element>
      <element name="TTextBuffer.GetIter.ALine">
        <short/>
      </element>
      <element name="TTextBuffer.GetIter.AChar">
        <short/>
      </element>
      <element name="TTextBuffer.GetIterAtOffset">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.GetIterAtOffset.Result">
        <short/>
      </element>
      <element name="TTextBuffer.GetIterAtOffset.AChar">
        <short/>
      </element>
      <element name="TTextBuffer.GetIterAtLine">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.GetIterAtLine.Result">
        <short/>
      </element>
      <element name="TTextBuffer.GetIterAtLine.ALine">
        <short/>
      </element>
      <element name="TTextBuffer.GetBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.GetBounds.AStart">
        <short/>
      </element>
      <element name="TTextBuffer.GetBounds.AEnd">
        <short/>
      </element>
      <element name="TTextBuffer.GetSelectionBounds">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.GetSelectionBounds.AStart">
        <short/>
      </element>
      <element name="TTextBuffer.GetSelectionBounds.AEnd">
        <short/>
      </element>
      <element name="TTextBuffer.GetText">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.GetText.Result">
        <short/>
      </element>
      <element name="TTextBuffer.GetText.AStart">
        <short/>
      </element>
      <element name="TTextBuffer.GetText.AEnd">
        <short/>
      </element>
      <element name="TTextBuffer.ApplyTagByName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.ApplyTagByName.ATag">
        <short/>
      </element>
      <element name="TTextBuffer.ApplyTagByName.AStart">
        <short/>
      </element>
      <element name="TTextBuffer.ApplyTagByName.AEnd">
        <short/>
      </element>
      <element name="TTextBuffer.RemoveAllTags">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.RemoveAllTags.AStart">
        <short/>
      </element>
      <element name="TTextBuffer.RemoveAllTags.AEnd">
        <short/>
      </element>
      <element name="TTextBuffer.RemoveAllTags">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.LoadFromFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.LoadFromFile.AFileName">
        <short/>
      </element>
      <element name="TTextBuffer.SaveToFile">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTextBuffer.SaveToFile.AFileName">
        <short/>
      </element>
      <element name="TTextBuffer.LineCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextBuffer.CharCount">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextBuffer.SelText">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextBuffer.Modified">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextBuffer.Text">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTextBuffer.OnChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TDialog">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.GetTitle.Result">
        <short/>
      </element>
      <element name="TDialog.SetTitle.AValue">
        <short/>
      </element>
      <element name="TDialog.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.Create.AOwner">
        <short/>
      </element>
      <element name="TDialog.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.Run">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.Run.Result">
        <short/>
      </element>
      <element name="TDialog.Execute">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.Execute.Result">
        <short/>
      </element>
      <element name="TDialog.Hide">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.Response">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.Response.AValue">
        <short/>
      </element>
      <element name="TDialog.AddButton">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.AddButton.ABtnText">
        <short/>
      </element>
      <element name="TDialog.AddButton.AResponseId">
        <short/>
      </element>
      <element name="TDialog.SetDefaultResponse">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.SetDefaultResponse.AValue">
        <short/>
      </element>
      <element name="TDialog.SetResponseSensitive">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TDialog.SetResponseSensitive.AResponseID">
        <short/>
      </element>
      <element name="TDialog.SetResponseSensitive.ASensitive">
        <short/>
      </element>
      <element name="TDialog.Title">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAboutDialog.GetAppName.Result">
        <short/>
      </element>
      <element name="TAboutDialog.SetAppName.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.GetVersion.Result">
        <short/>
      </element>
      <element name="TAboutDialog.SetVersion.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.GetCopyright.Result">
        <short/>
      </element>
      <element name="TAboutDialog.SetCopyright.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.GetComments.Result">
        <short/>
      </element>
      <element name="TAboutDialog.SetComments.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.GetLicense.Result">
        <short/>
      </element>
      <element name="TAboutDialog.SetLicense.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.GetWebsite.Result">
        <short/>
      </element>
      <element name="TAboutDialog.SetWebsite.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.GetWebsiteLabel.Result">
        <short/>
      </element>
      <element name="TAboutDialog.SetWebsiteLabel.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.SetLogo.AValue">
        <short/>
      </element>
      <element name="TAboutDialog.PixbufChanged.APixbuf">
        <short/>
      </element>
      <element name="TAboutDialog.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TAboutDialog.Notification.AComponent">
        <short/>
      </element>
      <element name="TAboutDialog.Notification.Operation">
        <short/>
      </element>
      <element name="TAboutDialog.AppName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog.Version">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog.Copyright">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog.Comments">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog.License">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog.Website">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog.WebsiteLabel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TAboutDialog.Logo">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.SetFileAction.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetFileAction.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.SetLocalOnly.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetLocalOnly.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.SetSelectMultiple.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetSelectMultiple.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.SetShowHidden.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetShowHidden.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.SetFileName.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetFileName.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.SetCurrentFolder.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetCurrentFolder.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.SetURI.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetURI.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.SetCurrentFolderURI.AValue">
        <short/>
      </element>
      <element name="TFileChooserDialog.GetCurrentFolderURI.Result">
        <short/>
      </element>
      <element name="TFileChooserDialog.FileName">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.CurrentFolder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.URI">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.CurrentFolderURI">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.FileAction">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.LocalOnly">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.SelectMultiple">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TFileChooserDialog.ShowHidden">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumns">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeViewColumns.GetItem.Result">
        <short/>
      </element>
      <element name="TTreeViewColumns.GetItem.AIdx">
        <short/>
      </element>
      <element name="TTreeViewColumns.SetItem.AIdx">
        <short/>
      </element>
      <element name="TTreeViewColumns.SetItem.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumns.GetOwner.Result">
        <short/>
      </element>
      <element name="TTreeViewColumns.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeViewColumns.Create.AOwner">
        <short/>
      </element>
      <element name="TTreeViewColumns.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeViewColumns.Add">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeViewColumns.Add.Result">
        <short/>
      </element>
      <element name="TTreeViewColumns.Items">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumns.Items.Idx">
        <short/>
      </element>
      <element name="TTreeViewColumn">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.GetColumnOrder.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetColumnOrder.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.IsColumnOrderStored.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetExpanderColumn.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetExpanderColumn.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.IsExpanderColumnStored.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetClickable.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetClickable.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetFixedWidth.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetFixedWidth.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetMaxWidth.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetMaxWidth.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetMinWidth.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetMinWidth.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetReorderable.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetReorderable.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetResizable.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetResizable.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetSizing.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetSizing.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetSpacing.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetSpacing.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetTitle.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetTitle.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetTextColumn.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetVisible.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetVisible.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetWidth.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.GetDisplayName.Result">
        <short/>
      </element>
      <element name="TTreeViewColumn.SetIndex.AValue">
        <short/>
      </element>
      <element name="TTreeViewColumn.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Create.ACollection">
        <short/>
      </element>
      <element name="TTreeViewColumn.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Width">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.ColumnOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Clickable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.ExpanderColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.FixedWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.MaxWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.MinWidth">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Reorderable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Resizable">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Sizing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Spacing">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.TextColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Title">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeViewColumn.Visible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeModel">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.SetStructure.AValue">
        <short/>
      </element>
      <element name="TTreeModel.SetValue.AIter">
        <short/>
      </element>
      <element name="TTreeModel.SetValue.ACol">
        <short/>
      </element>
      <element name="TTreeModel.SetValue.AGValue">
        <short/>
      </element>
      <element name="TTreeModel.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.Create.AOwner">
        <short/>
      </element>
      <element name="TTreeModel.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.GetIterFirst">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.GetIterFirst.Result">
        <short/>
      </element>
      <element name="TTreeModel.GetIterFirst.AIter">
        <short/>
      </element>
      <element name="TTreeModel.GetIterFromPath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.GetIterFromPath.Result">
        <short/>
      </element>
      <element name="TTreeModel.GetIterFromPath.APath">
        <short/>
      </element>
      <element name="TTreeModel.GetIterFromPath.AIter">
        <short/>
      </element>
      <element name="TTreeModel.GetPath">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.GetPath.Result">
        <short/>
      </element>
      <element name="TTreeModel.GetPath.AIter">
        <short/>
      </element>
      <element name="TTreeModel.IterNext">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.IterNext.Result">
        <short/>
      </element>
      <element name="TTreeModel.IterNext.AIter">
        <short/>
      </element>
      <element name="TTreeModel.IterChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.IterChildren.Result">
        <short/>
      </element>
      <element name="TTreeModel.IterChildren.AIter">
        <short/>
      </element>
      <element name="TTreeModel.IterChildren.AParent">
        <short/>
      </element>
      <element name="TTreeModel.IterHasChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.IterHasChild.Result">
        <short/>
      </element>
      <element name="TTreeModel.IterHasChild.AIter">
        <short/>
      </element>
      <element name="TTreeModel.IterNChildren">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.IterNChildren.Result">
        <short/>
      </element>
      <element name="TTreeModel.IterNChildren.AIter">
        <short/>
      </element>
      <element name="TTreeModel.IterNthChild">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.IterNthChild.Result">
        <short/>
      </element>
      <element name="TTreeModel.IterNthChild.AIter">
        <short/>
      </element>
      <element name="TTreeModel.IterNthChild.AParent">
        <short/>
      </element>
      <element name="TTreeModel.IterNthChild.AN">
        <short/>
      </element>
      <element name="TTreeModel.IterParent">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.IterParent.Result">
        <short/>
      </element>
      <element name="TTreeModel.IterParent.AIter">
        <short/>
      </element>
      <element name="TTreeModel.IterParent.AChild">
        <short/>
      </element>
      <element name="TTreeModel.GetIntegerValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.GetIntegerValue.Result">
        <short/>
      </element>
      <element name="TTreeModel.GetIntegerValue.AIter">
        <short/>
      </element>
      <element name="TTreeModel.GetIntegerValue.ACol">
        <short/>
      </element>
      <element name="TTreeModel.SetIntegerValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.SetIntegerValue.AIter">
        <short/>
      </element>
      <element name="TTreeModel.SetIntegerValue.ACol">
        <short/>
      </element>
      <element name="TTreeModel.SetIntegerValue.AValue">
        <short/>
      </element>
      <element name="TTreeModel.GetStringValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.GetStringValue.Result">
        <short/>
      </element>
      <element name="TTreeModel.GetStringValue.AIter">
        <short/>
      </element>
      <element name="TTreeModel.GetStringValue.ACol">
        <short/>
      </element>
      <element name="TTreeModel.SetStringValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.SetStringValue.AIter">
        <short/>
      </element>
      <element name="TTreeModel.SetStringValue.ACol">
        <short/>
      </element>
      <element name="TTreeModel.SetStringValue.AValue">
        <short/>
      </element>
      <element name="TTreeModel.GetPointerValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.GetPointerValue.Result">
        <short/>
      </element>
      <element name="TTreeModel.GetPointerValue.AIter">
        <short/>
      </element>
      <element name="TTreeModel.GetPointerValue.ACol">
        <short/>
      </element>
      <element name="TTreeModel.SetPointerValue">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeModel.SetPointerValue.AIter">
        <short/>
      </element>
      <element name="TTreeModel.SetPointerValue.ACol">
        <short/>
      </element>
      <element name="TTreeModel.SetPointerValue.AValue">
        <short/>
      </element>
      <element name="TTreeModel.Structure">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeStore">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.GetSortColumn.Result">
        <short/>
      </element>
      <element name="TTreeStore.GetSortOrder.Result">
        <short/>
      </element>
      <element name="TTreeStore.SetSortColumn.AValue">
        <short/>
      </element>
      <element name="TTreeStore.SetSortOrder.AValue">
        <short/>
      </element>
      <element name="TTreeStore.GetSortColumnID">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.GetSortColumnID.AColumn">
        <short/>
      </element>
      <element name="TTreeStore.GetSortColumnID.AOrder">
        <short/>
      </element>
      <element name="TTreeStore.SetSortColumnID">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.SetSortColumnID.AColumn">
        <short/>
      </element>
      <element name="TTreeStore.SetSortColumnID.AOrder">
        <short/>
      </element>
      <element name="TTreeStore.SortColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeStore.SortOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeStore.SetValue.AIter">
        <short/>
      </element>
      <element name="TTreeStore.SetValue.ACol">
        <short/>
      </element>
      <element name="TTreeStore.SetValue.AGValue">
        <short/>
      </element>
      <element name="TTreeStore.Remove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Remove.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Insert.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Insert.APosition">
        <short/>
      </element>
      <element name="TTreeStore.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Insert.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Insert.AParent">
        <short/>
      </element>
      <element name="TTreeStore.Insert.APosition">
        <short/>
      </element>
      <element name="TTreeStore.InsertBefore">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.InsertBefore.AIter">
        <short/>
      </element>
      <element name="TTreeStore.InsertBefore.ASibling">
        <short/>
      </element>
      <element name="TTreeStore.InsertAfter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.InsertAfter.AIter">
        <short/>
      </element>
      <element name="TTreeStore.InsertAfter.ASibling">
        <short/>
      </element>
      <element name="TTreeStore.Prepend">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Prepend.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Prepend">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Prepend.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Prepend.AParent">
        <short/>
      </element>
      <element name="TTreeStore.Append">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Append.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Append">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Append.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Append.AParent">
        <short/>
      </element>
      <element name="TTreeStore.IsAncestor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.IsAncestor.Result">
        <short/>
      </element>
      <element name="TTreeStore.IsAncestor.AIter">
        <short/>
      </element>
      <element name="TTreeStore.IsAncestor.ADescendant">
        <short/>
      </element>
      <element name="TTreeStore.IterDepth">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.IterDepth.Result">
        <short/>
      </element>
      <element name="TTreeStore.IterDepth.AIter">
        <short/>
      </element>
      <element name="TTreeStore.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Swap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.Swap.A">
        <short/>
      </element>
      <element name="TTreeStore.Swap.B">
        <short/>
      </element>
      <element name="TTreeStore.MoveBefore">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.MoveBefore.AIter">
        <short/>
      </element>
      <element name="TTreeStore.MoveBefore.APosition">
        <short/>
      </element>
      <element name="TTreeStore.MoveAfter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeStore.MoveAfter.AIter">
        <short/>
      </element>
      <element name="TTreeStore.MoveAfter.APosition">
        <short/>
      </element>
      <element name="TListStore">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.GetSortColumn.Result">
        <short/>
      </element>
      <element name="TListStore.GetSortOrder.Result">
        <short/>
      </element>
      <element name="TListStore.SetSortColumn.AValue">
        <short/>
      </element>
      <element name="TListStore.SetSortOrder.AValue">
        <short/>
      </element>
      <element name="TListStore.GetSortColumnID">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.GetSortColumnID.AColumn">
        <short/>
      </element>
      <element name="TListStore.GetSortColumnID.AOrder">
        <short/>
      </element>
      <element name="TListStore.SetSortColumnID">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.SetSortColumnID.AColumn">
        <short/>
      </element>
      <element name="TListStore.SetSortColumnID.AOrder">
        <short/>
      </element>
      <element name="TListStore.SortColumn">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListStore.SortOrder">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TListStore.SetValue.AIter">
        <short/>
      </element>
      <element name="TListStore.SetValue.ACol">
        <short/>
      </element>
      <element name="TListStore.SetValue.AGValue">
        <short/>
      </element>
      <element name="TListStore.Remove">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.Remove.AIter">
        <short/>
      </element>
      <element name="TListStore.Insert">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.Insert.AIter">
        <short/>
      </element>
      <element name="TListStore.Insert.APosition">
        <short/>
      </element>
      <element name="TListStore.InsertBefore">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.InsertBefore.AIter">
        <short/>
      </element>
      <element name="TListStore.InsertBefore.ASibling">
        <short/>
      </element>
      <element name="TListStore.InsertAfter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.InsertAfter.AIter">
        <short/>
      </element>
      <element name="TListStore.InsertAfter.ASibling">
        <short/>
      </element>
      <element name="TListStore.Prepend">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.Prepend.AIter">
        <short/>
      </element>
      <element name="TListStore.Append">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.Append.AIter">
        <short/>
      </element>
      <element name="TListStore.Clear">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.Swap">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.Swap.A">
        <short/>
      </element>
      <element name="TListStore.Swap.B">
        <short/>
      </element>
      <element name="TListStore.MoveBefore">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.MoveBefore.AIter">
        <short/>
      </element>
      <element name="TListStore.MoveBefore.APosition">
        <short/>
      </element>
      <element name="TListStore.MoveAfter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TListStore.MoveAfter.AIter">
        <short/>
      </element>
      <element name="TListStore.MoveAfter.APosition">
        <short/>
      </element>
      <element name="TTreeView">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.SetColumns.AValue">
        <short/>
      </element>
      <element name="TTreeView.GetHeadersVisible.Result">
        <short/>
      </element>
      <element name="TTreeView.SetHeadersVisible.AValue">
        <short/>
      </element>
      <element name="TTreeView.GetRulesHint.Result">
        <short/>
      </element>
      <element name="TTreeView.SetRulesHint.AValue">
        <short/>
      </element>
      <element name="TTreeView.SetModel.AValue">
        <short/>
      </element>
      <element name="TTreeView.GetSelectionMode.Result">
        <short/>
      </element>
      <element name="TTreeView.SetSelectionMode.AValue">
        <short/>
      </element>
      <element name="TTreeView.DoChanged.Msg">
        <short/>
      </element>
      <element name="TTreeView.DoRowActivated.Msg">
        <short/>
      </element>
      <element name="TTreeView.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.Create.AOwner">
        <short/>
      </element>
      <element name="TTreeView.Destroy">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.Notification">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.Notification.AComponent">
        <short/>
      </element>
      <element name="TTreeView.Notification.Operation">
        <short/>
      </element>
      <element name="TTreeView.ColumnsAutosize">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.ExpandAll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.CollapseAll">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.ExpandTo">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.ExpandTo.AIter">
        <short/>
      </element>
      <element name="TTreeView.SelectIter">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.SelectIter.AIter">
        <short/>
      </element>
      <element name="TTreeView.IterIsSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.IterIsSelected.Result">
        <short/>
      </element>
      <element name="TTreeView.IterIsSelected.AIter">
        <short/>
      </element>
      <element name="TTreeView.GetSelected">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TTreeView.GetSelected.Result">
        <short/>
      </element>
      <element name="TTreeView.GetSelected.AIter">
        <short/>
      </element>
      <element name="TTreeView.Columns">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeView.HeadersVisible">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeView.RulesHint">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeView.SelectionMode">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeView.Model">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeView.OnSelectionChanged">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTreeView.OnRowActivated">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="QuarkByName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="QuarkByName.Result">
        <short/>
      </element>
      <element name="QuarkByName.AName">
        <short/>
      </element>
      <element name="TryQuarkByName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TryQuarkByName.Result">
        <short/>
      </element>
      <element name="TryQuarkByName.AName">
        <short/>
      </element>
      <element name="QuarkName">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="QuarkName.Result">
        <short/>
      </element>
      <element name="QuarkName.AQuark">
        <short/>
      </element>
      <element name="ColorToRGB">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="ColorToRGB.ADesc">
        <short/>
      </element>
      <element name="ColorToRGB.R">
        <short/>
      </element>
      <element name="ColorToRGB.G">
        <short/>
      </element>
      <element name="ColorToRGB.B">
        <short/>
      </element>
      <element name="RGBToColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="RGBToColor.Result">
        <short/>
      </element>
      <element name="RGBToColor.R">
        <short/>
      </element>
      <element name="RGBToColor.G">
        <short/>
      </element>
      <element name="RGBToColor.B">
        <short/>
      </element>
      <element name="GdkColorToColor">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="GdkColorToColor.Result">
        <short/>
      </element>
      <element name="GdkColorToColor.AGdkColor">
        <short/>
      </element>
      <element name="ConnectGtkSignal">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="ConnectGtkSignal.Handle">
        <short/>
      </element>
      <element name="ConnectGtkSignal.AName">
        <short/>
      </element>
      <element name="DisconnectGtkSignal">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="DisconnectGtkSignal.Handle">
        <short/>
      </element>
      <element name="DisconnectGtkSignal.AName">
        <short/>
      </element>
      <element name="TResourceStream">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TResourceStream.Create">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TResourceStream.Create.RType">
        <short/>
      </element>
      <element name="TResourceStream.Create.RName">
        <short/>
      </element>
      <element name="TResourceStream.Write">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="TResourceStream.Write.Result">
        <short/>
      </element>
      <element name="TResourceStream.Write.Buffer">
        <short/>
      </element>
      <element name="TResourceStream.Write.Count">
        <short/>
      </element>
      <element name="AddResource">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="AddResource.RType">
        <short/>
      </element>
      <element name="AddResource.RName">
        <short/>
      </element>
      <element name="AddResource.RData">
        <short/>
      </element>
      <element name="AddResource.RSize">
        <short/>
      </element>
      <element name="GetResource">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="GetResource.RType">
        <short/>
      </element>
      <element name="GetResource.RName">
        <short/>
      </element>
      <element name="GetResource.RData">
        <short/>
      </element>
      <element name="GetResource.RSize">
        <short/>
      </element>
      <element name="ResourceExists">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="ResourceExists.Result">
        <short/>
      </element>
      <element name="ResourceExists.RType">
        <short/>
      </element>
      <element name="ResourceExists.RName">
        <short/>
      </element>
      <element name="ObjectByHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="ObjectByHandle.Result">
        <short/>
      </element>
      <element name="ObjectByHandle.AHandle">
        <short/>
      </element>
      <element name="ControlByHandle">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
      <element name="ControlByHandle.Result">
        <short/>
      </element>
      <element name="ControlByHandle.AHandle">
        <short/>
      </element>
      <element name="Application">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="Clipboard">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="Primary">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="QTObject">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="Register">
        <short/>
        <descr/>
        <errors/>
        <seealso/>
      </element>
    </module>
  </package>
</fpdoc-descriptions>
